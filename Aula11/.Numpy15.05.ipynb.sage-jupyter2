{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":296378368},"metadata":{"celltoolbar":"Slideshow","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","collapsed":true,"exec_count":0,"id":"0f6765","input":"","pos":119,"type":"cell"}
{"cell_type":"code","collapsed":true,"exec_count":0,"id":"239cb9","input":"","pos":88,"type":"cell"}
{"cell_type":"code","collapsed":true,"exec_count":10,"id":"fdcb21","input":"b=np.array([1,2,3])","pos":14,"type":"cell"}
{"cell_type":"code","collapsed":true,"exec_count":13,"id":"4a60f9","input":"vetor_coluna=np.array([[1],[2],[3]])\n","pos":17,"type":"cell"}
{"cell_type":"code","collapsed":true,"exec_count":80,"id":"707ba0","input":"\nfrom numpy import linalg as LA\narr2d = np.array((  (100,200,300), \n          (111,222,333), \n          (129,461,795) ))\n\n","pos":75,"type":"cell"}
{"cell_type":"code","end":1557965818027,"exec_count":1,"id":"b1a286","input":"import numpy as np","kernel":"python3","pos":3,"start":1557965817986,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965848964,"exec_count":2,"id":"a4123c","input":"lista = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]\nlista","kernel":"python3","output":{"0":{"data":{"text/plain":"[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]"},"exec_count":2}},"pos":33,"start":1557965848946,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965880278,"exec_count":4,"id":"c7da2d","input":"lista[0:-1]","kernel":"python3","output":{"0":{"data":{"text/plain":"[[0, 1, 2, 3], [4, 5, 6, 7]]"},"exec_count":4}},"pos":34,"start":1557965880251,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965887054,"exec_count":5,"id":"4a9aa9","input":"mat = np.array(lista)\nmat","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]])"},"exec_count":5}},"pos":35,"start":1557965887044,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965908057,"exec_count":7,"id":"038741","input":"mat[1] ##Pegando penúltima linha","kernel":"python3","output":{"0":{"data":{"text/plain":"array([4, 5, 6, 7])"},"exec_count":7}},"pos":36,"start":1557965908039,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965924053,"exec_count":8,"id":"804136","input":"mat[:,2]## Pegando a terceira coluna","kernel":"python3","output":{"0":{"data":{"text/plain":"array([ 2,  6, 10])"},"exec_count":8}},"pos":37,"start":1557965924037,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965935788,"exec_count":9,"id":"0b7f9e","input":"mat[:,2:]## Duas ultimas colunas e linhas","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[ 2,  3],\n       [ 6,  7],\n       [10, 11]])"},"exec_count":9}},"pos":38,"start":1557965935763,"state":"done","type":"cell"}
{"cell_type":"code","end":1557965981387,"exec_count":10,"id":"3a39fa","input":"a1 = np.array([[1,2],[3,4]])\nb1 = np.array([[0,2],[3,1]])\nsoma=a1+b1\nmultiplicacao=a1*b1\ndivisao=b1/a1\nprint('Soma:',soma)\nprint('Multiplicação:',multiplicacao)\nprint('Divisão:',divisao)","kernel":"python3","output":{"0":{"name":"stdout","text":"Soma: [[1 4]\n [6 5]]\nMultiplicação: [[0 4]\n [9 4]]\nDivisão: [[0.   1.  ]\n [1.   0.25]]\n"}},"pos":40,"start":1557965981309,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966001592,"exec_count":11,"id":"87fe06","input":"a=np.array([[1,2,3]])\nnp.dot(a,a.T)","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[14]])"},"exec_count":11}},"pos":42,"start":1557966001564,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966003598,"exec_count":12,"id":"16eaa6","input":"np.dot(a1,b1)-np.dot(b1,a1)","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[ 0, -4],\n       [ 6,  0]])"},"exec_count":12}},"pos":43,"start":1557966003573,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966257866,"exec_count":22,"id":"5b3810","input":"numeros=10*np.random.randint(0,1,size=(2, 4))\nnumeros[ 1 , 1] = 10\nnumeros[:, 2 ] = 50","kernel":"python3","pos":50,"start":1557966257852,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966260678,"exec_count":24,"id":"458737","input":" np.random.randint(5,10, size=(2, 4))","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[7, 5, 7, 9],\n       [6, 6, 7, 8]])"},"exec_count":24}},"pos":51,"start":1557966260649,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966261247,"exec_count":25,"id":"98b6d9","input":"numeros","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0]])"},"exec_count":25}},"pos":52,"start":1557966261223,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966404362,"exec_count":26,"id":"92ebf9","input":"import numpy as np\nimport matplotlib","kernel":"python3","pos":101,"start":1557966404352,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966405957,"exec_count":27,"id":"ec2d73","input":"def step(matlife):\n    matviz=np.zeros((size,size))\n    for i in range(size):\n        for j in range(size):        \n            matviz[i,j]=matlife[(i+1)%size,j]+matlife[(i-1)%size,j]+matlife[i,(j+1) % size]+matlife[i,(j-1) % size]+matlife[(i+1)%size,(j+1) % size]+matlife[(i-1)%size,(j-1)% size]+matlife[(i-1)%size,(j+1) % size]+matlife[(i+1)%size,(j-1) % size]\n    matlife2=np.zeros((size,size))\n    bool1=matviz==2\n    bool2=matviz==3\n    matlife2[(bool1|bool2)]=1\n    return matlife2","kernel":"python3","pos":102,"start":1557966405757,"state":"done","type":"cell"}
{"cell_type":"code","end":1557966456876,"exec_count":28,"id":"3dd061","input":"size=20\nmatlife=np.random.randint(2,size=(size,size))\nmatplotlib.pyplot.matshow(matlife)\nL=[]\nfor i in range(100):\n    matlife=step(matlife)\n    matplotlib.pyplot.matshow(matlife)","kernel":"python3","output":{"0":{"name":"stderr","text":"/usr/lib/python3/dist-packages/matplotlib/pyplot.py:528: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).\n  max_open_warning, RuntimeWarning)\n"},"1":{"data":{"image/png":"1e178f3f81ef01f29d2c4d218ff79d524de25789","text/plain":"<matplotlib.figure.Figure at 0x7f421f666ba8>"},"metadata":{"image/png":{"height":255,"width":259}}},"10":{"data":{"image/png":"7b8bec77654ff379a36a02ddf50a34a3f9e01ba2","text/plain":"<matplotlib.figure.Figure at 0x7f41f674e518>"},"metadata":{"image/png":{"height":255,"width":259}}},"100":{"data":{"image/png":"f561a2b913ed632dfbfe022debef7ab4bbf16982","text/plain":"<matplotlib.figure.Figure at 0x7f41f51ffac8>"},"metadata":{"image/png":{"height":255,"width":259}}},"101":{"data":{"image/png":"932f865a7f83a3337c92f65933ef95bcbf837204","text/plain":"<matplotlib.figure.Figure at 0x7f41f51c35f8>"},"metadata":{"image/png":{"height":255,"width":259}}},"11":{"data":{"image/png":"660acdab7f63a2cd6c5d458aaf9b245e61773ed3","text/plain":"<matplotlib.figure.Figure at 0x7f41f670beb8>"},"metadata":{"image/png":{"height":255,"width":259}}},"12":{"data":{"image/png":"07036ddb64cc004316af9f9074006946ea918158","text/plain":"<matplotlib.figure.Figure at 0x7f41f66ca828>"},"metadata":{"image/png":{"height":255,"width":259}}},"13":{"data":{"image/png":"c391ae170ade040632daa84041dc835108c4efdb","text/plain":"<matplotlib.figure.Figure at 0x7f41f66fdd68>"},"metadata":{"image/png":{"height":255,"width":259}}},"14":{"data":{"image/png":"b64934e4ed5c9e1971fa96e77c64d5d0bf234727","text/plain":"<matplotlib.figure.Figure at 0x7f41f66bc208>"},"metadata":{"image/png":{"height":255,"width":259}}},"15":{"data":{"image/png":"f33e2045e08817be42b7f40e79b84d039bd441a3","text/plain":"<matplotlib.figure.Figure at 0x7f41f6677c88>"},"metadata":{"image/png":{"height":255,"width":259}}},"16":{"data":{"image/png":"87baa96ddbdd395bf7ca3a62691ce32ed6eee6a6","text/plain":"<matplotlib.figure.Figure at 0x7f41f6637898>"},"metadata":{"image/png":{"height":255,"width":259}}},"17":{"data":{"image/png":"1d28667d959e70b06f0a7269c53b867e36f96081","text/plain":"<matplotlib.figure.Figure at 0x7f41f664b438>"},"metadata":{"image/png":{"height":255,"width":259}}},"18":{"data":{"image/png":"4c8ed3dccb646f3b2d796093bfe053fed9b22883","text/plain":"<matplotlib.figure.Figure at 0x7f41f65a99e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"19":{"data":{"image/png":"67ed81f0c530c4787189a1889fb228efe6d94eeb","text/plain":"<matplotlib.figure.Figure at 0x7f41f65683c8>"},"metadata":{"image/png":{"height":255,"width":259}}},"2":{"data":{"image/png":"11eec9943c2288faf36c7d042d51500988573941","text/plain":"<matplotlib.figure.Figure at 0x7f41f8969160>"},"metadata":{"image/png":{"height":255,"width":259}}},"20":{"data":{"image/png":"15f859d9000b981354c38eff5409795ac507d1cf","text/plain":"<matplotlib.figure.Figure at 0x7f41f6525c88>"},"metadata":{"image/png":{"height":255,"width":259}}},"21":{"data":{"image/png":"99a004a0fdcbcbe72c50963e32d407556efbe7cc","text/plain":"<matplotlib.figure.Figure at 0x7f41f64e47b8>"},"metadata":{"image/png":{"height":255,"width":259}}},"22":{"data":{"image/png":"0290d25fcb2ccfadab8cc45c5accfa6030d9623e","text/plain":"<matplotlib.figure.Figure at 0x7f41f649d320>"},"metadata":{"image/png":{"height":255,"width":259}}},"23":{"data":{"image/png":"8ffb29f5663346eefa281f6c1071867dd1014b68","text/plain":"<matplotlib.figure.Figure at 0x7f41f645f0f0>"},"metadata":{"image/png":{"height":255,"width":259}}},"24":{"data":{"image/png":"b71a19b0affef2a6fc9f63a1187bd8a9a04a87cf","text/plain":"<matplotlib.figure.Figure at 0x7f41f641bd30>"},"metadata":{"image/png":{"height":255,"width":259}}},"25":{"data":{"image/png":"19910b5149d18567fec86dd2476c22c999e3cf60","text/plain":"<matplotlib.figure.Figure at 0x7f41f63db9b0>"},"metadata":{"image/png":{"height":255,"width":259}}},"26":{"data":{"image/png":"5c25c7936c3beebeedb02a36721fae8abaac1f03","text/plain":"<matplotlib.figure.Figure at 0x7f41f6391b00>"},"metadata":{"image/png":{"height":255,"width":259}}},"27":{"data":{"image/png":"45af8baff026d337d42ac5c6c208e5678468839a","text/plain":"<matplotlib.figure.Figure at 0x7f41f6350860>"},"metadata":{"image/png":{"height":255,"width":259}}},"28":{"data":{"image/png":"2debe97053bd6d8aa77c909b223dab606523b908","text/plain":"<matplotlib.figure.Figure at 0x7f41f6312470>"},"metadata":{"image/png":{"height":255,"width":259}}},"29":{"data":{"image/png":"f37099bb40ba5ce49005c7ad6eec14da497c23e3","text/plain":"<matplotlib.figure.Figure at 0x7f41f62d20f0>"},"metadata":{"image/png":{"height":255,"width":259}}},"3":{"data":{"image/png":"e478137bce36162f0565455c64a79d4ba7a3c44d","text/plain":"<matplotlib.figure.Figure at 0x7f41f6933d30>"},"metadata":{"image/png":{"height":255,"width":259}}},"30":{"data":{"image/png":"1dbcc51fb52cef835b885ca0804ec0eab471091a","text/plain":"<matplotlib.figure.Figure at 0x7f41f62f6908>"},"metadata":{"image/png":{"height":255,"width":259}}},"31":{"data":{"image/png":"f3aeaf800cb5d12b36180f3ae7856c387206e1ec","text/plain":"<matplotlib.figure.Figure at 0x7f41f62b9278>"},"metadata":{"image/png":{"height":255,"width":259}}},"32":{"data":{"image/png":"5eb4cae27dcb768abd9a7d16e22ca6753a439820","text/plain":"<matplotlib.figure.Figure at 0x7f41f6271c18>"},"metadata":{"image/png":{"height":255,"width":259}}},"33":{"data":{"image/png":"8fc3002558214462c41cac0cadab81dab05ce46e","text/plain":"<matplotlib.figure.Figure at 0x7f41f62355f8>"},"metadata":{"image/png":{"height":255,"width":259}}},"34":{"data":{"image/png":"cc3f5c22da656d47dac22f8293f131601a527f54","text/plain":"<matplotlib.figure.Figure at 0x7f41f61e7ac8>"},"metadata":{"image/png":{"height":255,"width":259}}},"35":{"data":{"image/png":"f35e337d7d9c8eefdb8cf98a55f83179526ab309","text/plain":"<matplotlib.figure.Figure at 0x7f41f61a9898>"},"metadata":{"image/png":{"height":255,"width":259}}},"36":{"data":{"image/png":"7b8177863fbfcd01dad55cec0e781c4f8827d68e","text/plain":"<matplotlib.figure.Figure at 0x7f41f616d4a8>"},"metadata":{"image/png":{"height":255,"width":259}}},"37":{"data":{"image/png":"72254084d91da81b2f6edd3f3bd2b9c5d213de45","text/plain":"<matplotlib.figure.Figure at 0x7f41f612b128>"},"metadata":{"image/png":{"height":255,"width":259}}},"38":{"data":{"image/png":"67ea99ad5eb8c23cb7e15660f5cc459f344aaf16","text/plain":"<matplotlib.figure.Figure at 0x7f41f60dac88>"},"metadata":{"image/png":{"height":255,"width":259}}},"39":{"data":{"image/png":"0f9ff9becf4eec695586a45450223c8880e30902","text/plain":"<matplotlib.figure.Figure at 0x7f41f609aba8>"},"metadata":{"image/png":{"height":255,"width":259}}},"4":{"data":{"image/png":"3819b8eac73b1ad93ae703cda556bd072b304496","text/plain":"<matplotlib.figure.Figure at 0x7f41f68f5710>"},"metadata":{"image/png":{"height":255,"width":259}}},"40":{"data":{"image/png":"60a2ea6220743c273a32d1d96f1c2f2ab310ed71","text/plain":"<matplotlib.figure.Figure at 0x7f41f6059828>"},"metadata":{"image/png":{"height":255,"width":259}}},"41":{"data":{"image/png":"6e44d25bd9ba7a992b2ce0dca3f5049fd3eeb169","text/plain":"<matplotlib.figure.Figure at 0x7f41f601c4a8>"},"metadata":{"image/png":{"height":255,"width":259}}},"42":{"data":{"image/png":"b8abd722b92b8f8284446d3b155b2b6ab943d886","text/plain":"<matplotlib.figure.Figure at 0x7f41f5fcae48>"},"metadata":{"image/png":{"height":255,"width":259}}},"43":{"data":{"image/png":"46870a4216c80197da3ee3f33e9b702bd6f0eb7d","text/plain":"<matplotlib.figure.Figure at 0x7f41f5f8bd68>"},"metadata":{"image/png":{"height":255,"width":259}}},"44":{"data":{"image/png":"8c058d8b59363e6fd12146ef71ade362ff1b375a","text/plain":"<matplotlib.figure.Figure at 0x7f41f5f4c9e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"45":{"data":{"image/png":"6146dd50c6587e9ebda6e569a6c53878e117dc1e","text/plain":"<matplotlib.figure.Figure at 0x7f41f5f0b668>"},"metadata":{"image/png":{"height":255,"width":259}}},"46":{"data":{"image/png":"f61774577d2c609f6356a31abcdea546ecaf37ec","text/plain":"<matplotlib.figure.Figure at 0x7f41f5ec0048>"},"metadata":{"image/png":{"height":255,"width":259}}},"47":{"data":{"image/png":"d153f22b13051b22b7e8b32b4fb7ea5c2ac95dda","text/plain":"<matplotlib.figure.Figure at 0x7f41f5efbf28>"},"metadata":{"image/png":{"height":255,"width":259}}},"48":{"data":{"image/png":"a25390119f7dfc404a458571e228d9ab70679840","text/plain":"<matplotlib.figure.Figure at 0x7f41f5ebaba8>"},"metadata":{"image/png":{"height":255,"width":259}}},"49":{"data":{"image/png":"ee619e3116d4d4e2065258f5de311da284102b3b","text/plain":"<matplotlib.figure.Figure at 0x7f41f5e7a828>"},"metadata":{"image/png":{"height":255,"width":259}}},"5":{"data":{"image/png":"bb7c631d54cc7dcc6878702760a5dfdb4f406ed7","text/plain":"<matplotlib.figure.Figure at 0x7f41f6841c50>"},"metadata":{"image/png":{"height":255,"width":259}}},"50":{"data":{"image/png":"be41de3bbbc8b1b27362ca2f1140cc6dc0d179b3","text/plain":"<matplotlib.figure.Figure at 0x7f41f5e30208>"},"metadata":{"image/png":{"height":255,"width":259}}},"51":{"data":{"image/png":"900695e412097aba90ca8e0c9de10c7d0868cba3","text/plain":"<matplotlib.figure.Figure at 0x7f41f5df0128>"},"metadata":{"image/png":{"height":255,"width":259}}},"52":{"data":{"image/png":"f0809d04fb56b948248fbe31bf3107c5ce4c15b0","text/plain":"<matplotlib.figure.Figure at 0x7f41f5dabd68>"},"metadata":{"image/png":{"height":255,"width":259}}},"53":{"data":{"image/png":"fef48cfd63dca9512a44acbaaf067ad591797fec","text/plain":"<matplotlib.figure.Figure at 0x7f41f5d6d9e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"54":{"data":{"image/png":"f665cf44ecb6535e8d739c82463fb254cd356991","text/plain":"<matplotlib.figure.Figure at 0x7f41f5d1e3c8>"},"metadata":{"image/png":{"height":255,"width":259}}},"55":{"data":{"image/png":"1bbbb2b8bcc1bc4fb625a73865d262db08166fee","text/plain":"<matplotlib.figure.Figure at 0x7f41f5ce02e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"56":{"data":{"image/png":"3e50512e9931762093480ad03aab0c6ea8e5475e","text/plain":"<matplotlib.figure.Figure at 0x7f41f5c9cf28>"},"metadata":{"image/png":{"height":255,"width":259}}},"57":{"data":{"image/png":"43053e504526c69f022e6526b9e8feb5607b557a","text/plain":"<matplotlib.figure.Figure at 0x7f41f5c5dba8>"},"metadata":{"image/png":{"height":255,"width":259}}},"58":{"data":{"image/png":"524f1be12df42eddf15ad0d8d422dcdd825acdbf","text/plain":"<matplotlib.figure.Figure at 0x7f41f5c14588>"},"metadata":{"image/png":{"height":255,"width":259}}},"59":{"data":{"image/png":"4e1efa212a2a22ae8692aaa275dac42270c1900d","text/plain":"<matplotlib.figure.Figure at 0x7f41f5bd44a8>"},"metadata":{"image/png":{"height":255,"width":259}}},"6":{"data":{"image/png":"29907b8a09e4819d21db18ce22e749ab2b20501c","text/plain":"<matplotlib.figure.Figure at 0x7f41f685ae48>"},"metadata":{"image/png":{"height":255,"width":259}}},"60":{"data":{"image/png":"99785599d2547ceb7c194e82b7230095d5eb3984","text/plain":"<matplotlib.figure.Figure at 0x7f41f5b95128>"},"metadata":{"image/png":{"height":255,"width":259}}},"61":{"data":{"image/png":"721c523fd86cd16f5ea96b9472ad4749f94de455","text/plain":"<matplotlib.figure.Figure at 0x7f41f5b4fd68>"},"metadata":{"image/png":{"height":255,"width":259}}},"62":{"data":{"image/png":"490df160ddc526a388ba612767d9f3c02bd5c9af","text/plain":"<matplotlib.figure.Figure at 0x7f41f5b7d748>"},"metadata":{"image/png":{"height":255,"width":259}}},"63":{"data":{"image/png":"e69b8903fba7ee3182785aad5cc9db3f59e9b82f","text/plain":"<matplotlib.figure.Figure at 0x7f41f5ac4668>"},"metadata":{"image/png":{"height":255,"width":259}}},"64":{"data":{"image/png":"3fb0f28a96eec50b6b87c980f0f7f5bda966c16b","text/plain":"<matplotlib.figure.Figure at 0x7f41f5a852e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"65":{"data":{"image/png":"fe6b7c21eccefcbba5d8c3a49a8b1f011fb7a054","text/plain":"<matplotlib.figure.Figure at 0x7f41f5a40f28>"},"metadata":{"image/png":{"height":255,"width":259}}},"66":{"data":{"image/png":"9815992be9a3f05eda25faad5957013cdb8003e9","text/plain":"<matplotlib.figure.Figure at 0x7f41f5a71908>"},"metadata":{"image/png":{"height":255,"width":259}}},"67":{"data":{"image/png":"8f8ea81694493c51163e8fbb26f5655dd88cbaf8","text/plain":"<matplotlib.figure.Figure at 0x7f41f5a33828>"},"metadata":{"image/png":{"height":255,"width":259}}},"68":{"data":{"image/png":"66e308419406a1dbe22c2ef4801b4cca847480cf","text/plain":"<matplotlib.figure.Figure at 0x7f41f59f4518>"},"metadata":{"image/png":{"height":255,"width":259}}},"69":{"data":{"image/png":"a0daa26148a92b9c76808c2743f388d20449ab8d","text/plain":"<matplotlib.figure.Figure at 0x7f41f59b4198>"},"metadata":{"image/png":{"height":255,"width":259}}},"7":{"data":{"image/png":"56ad8cbc4b83e8444ae2b02b5b4e2c3521f41217","text/plain":"<matplotlib.figure.Figure at 0x7f41f681b898>"},"metadata":{"image/png":{"height":255,"width":259}}},"70":{"data":{"image/png":"41e7ee62b099b6f4dd3955d04ac117be1ac757b1","text/plain":"<matplotlib.figure.Figure at 0x7f41f5964ac8>"},"metadata":{"image/png":{"height":255,"width":259}}},"71":{"data":{"image/png":"38ec7c721175f2bc157dc3ec415ed34dae855cd6","text/plain":"<matplotlib.figure.Figure at 0x7f41f59239e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"72":{"data":{"image/png":"76af42e365b903af494b53702728c3d6ea3f1473","text/plain":"<matplotlib.figure.Figure at 0x7f41f58e5668>"},"metadata":{"image/png":{"height":255,"width":259}}},"73":{"data":{"image/png":"418818b68792f50d215387c16dddd72580c6c520","text/plain":"<matplotlib.figure.Figure at 0x7f41f58a62e8>"},"metadata":{"image/png":{"height":255,"width":259}}},"74":{"data":{"image/png":"55cb63b48ca5f8023a41207fce956831eac589e3","text/plain":"<matplotlib.figure.Figure at 0x7f41f5853c88>"},"metadata":{"image/png":{"height":255,"width":259}}},"75":{"data":{"image/png":"76b127e337d55424d6805be0b6546d874bf4b8a8","text/plain":"<matplotlib.figure.Figure at 0x7f41f5815a58>"},"metadata":{"image/png":{"height":255,"width":259}}},"76":{"data":{"image/png":"ec58c7780ee52b8272d73bd8abde8f9a312b6a47","text/plain":"<matplotlib.figure.Figure at 0x7f41f57d75f8>"},"metadata":{"image/png":{"height":255,"width":259}}},"77":{"data":{"image/png":"772900e1a8ea945b487e1b62b95f4935398a3708","text/plain":"<matplotlib.figure.Figure at 0x7f41f5797278>"},"metadata":{"image/png":{"height":255,"width":259}}},"78":{"data":{"image/png":"726c0197fff8a32f42fc7b5bcb2cb4870a6fca06","text/plain":"<matplotlib.figure.Figure at 0x7f41f574b0f0>"},"metadata":{"image/png":{"height":255,"width":259}}},"79":{"data":{"image/png":"197dc845c6091ec5986f2ea6617ea455fd32484f","text/plain":"<matplotlib.figure.Figure at 0x7f41f57074a8>"},"metadata":{"image/png":{"height":255,"width":259}}},"8":{"data":{"image/png":"8abbed3a56b458953ffc5575468be03fd7bb400e","text/plain":"<matplotlib.figure.Figure at 0x7f41f67dd588>"},"metadata":{"image/png":{"height":255,"width":259}}},"80":{"data":{"image/png":"1a5985dfaafb38bfe92361b9ffcdd0788a4f4db8","text/plain":"<matplotlib.figure.Figure at 0x7f41f56c1e48>"},"metadata":{"image/png":{"height":255,"width":259}}},"81":{"data":{"image/png":"184a87bb69c47d84546965faacccf20e5cdcf667","text/plain":"<matplotlib.figure.Figure at 0x7f41f5683a58>"},"metadata":{"image/png":{"height":255,"width":259}}},"82":{"data":{"image/png":"bedf29e5e67a199259887c76442b6a975a1276f7","text/plain":"<matplotlib.figure.Figure at 0x7f41f56c6550>"},"metadata":{"image/png":{"height":255,"width":259}}},"83":{"data":{"image/png":"6d3045e2cf0725e0bf9907cc01af098f055a5ad9","text/plain":"<matplotlib.figure.Figure at 0x7f41f5676c18>"},"metadata":{"image/png":{"height":255,"width":259}}},"84":{"data":{"image/png":"416285a309da46aa0948a4676d40214de3688fcc","text/plain":"<matplotlib.figure.Figure at 0x7f41f5637748>"},"metadata":{"image/png":{"height":255,"width":259}}},"85":{"data":{"image/png":"466480a05f456bb4eaf73d151f2b8ecc261ddb22","text/plain":"<matplotlib.figure.Figure at 0x7f41f55fb278>"},"metadata":{"image/png":{"height":255,"width":259}}},"86":{"data":{"image/png":"83740b13dee7edcc16c86d5087eff087daebc772","text/plain":"<matplotlib.figure.Figure at 0x7f41f55ee4e0>"},"metadata":{"image/png":{"height":255,"width":259}}},"87":{"data":{"image/png":"42fcc989ff5b8bc961b5ade3f840d49886bbc088","text/plain":"<matplotlib.figure.Figure at 0x7f41f556f128>"},"metadata":{"image/png":{"height":255,"width":259}}},"88":{"data":{"image/png":"5cd55538da02001bfb498a51b445180d9edbf752","text/plain":"<matplotlib.figure.Figure at 0x7f41f5526c18>"},"metadata":{"image/png":{"height":255,"width":259}}},"89":{"data":{"image/png":"eb6791edc37a4dc4a0a96d64ac6d3b2434b94a80","text/plain":"<matplotlib.figure.Figure at 0x7f41f54ea748>"},"metadata":{"image/png":{"height":255,"width":259}}},"9":{"data":{"image/png":"bc449a0bfdb24d31a7094c6257654aa5d91f0915","text/plain":"<matplotlib.figure.Figure at 0x7f41f67987b8>"},"metadata":{"image/png":{"height":255,"width":259}}},"90":{"data":{"image/png":"3716befe8e8ef55114630080472812038904c14a","text/plain":"<matplotlib.figure.Figure at 0x7f41f5536f60>"},"metadata":{"image/png":{"height":255,"width":259}}},"91":{"data":{"image/png":"189a3311b7d50eff8023b8b868dafb29f6b27b02","text/plain":"<matplotlib.figure.Figure at 0x7f41f545f5f8>"},"metadata":{"image/png":{"height":255,"width":259}}},"92":{"data":{"image/png":"ad2fecd51053e42aa82b0264b3b7082443e304d5","text/plain":"<matplotlib.figure.Figure at 0x7f41f541f128>"},"metadata":{"image/png":{"height":255,"width":259}}},"93":{"data":{"image/png":"7126125b9960e773b8fba6900a0e4aa938aafc8d","text/plain":"<matplotlib.figure.Figure at 0x7f41f53d9c88>"},"metadata":{"image/png":{"height":255,"width":259}}},"94":{"data":{"image/png":"8e2797078a065ff52daafe0a1d108ec015bb58c0","text/plain":"<matplotlib.figure.Figure at 0x7f41f542f908>"},"metadata":{"image/png":{"height":255,"width":259}}},"95":{"data":{"image/png":"b8906d46c572241377331d0ff69d3f8480204d5d","text/plain":"<matplotlib.figure.Figure at 0x7f41f534cac8>"},"metadata":{"image/png":{"height":255,"width":259}}},"96":{"data":{"image/png":"96446a921ca5f3c11c8001e67ea91a94cee8d863","text/plain":"<matplotlib.figure.Figure at 0x7f41f53125f8>"},"metadata":{"image/png":{"height":255,"width":259}}},"97":{"data":{"image/png":"4cbadc7d07f3ded669d27f84fecbf90bfd269a74","text/plain":"<matplotlib.figure.Figure at 0x7f41f52d1128>"},"metadata":{"image/png":{"height":255,"width":259}}},"98":{"data":{"image/png":"ad27ed4cfff72f5b2439d804365312e83783917d","text/plain":"<matplotlib.figure.Figure at 0x7f41f52c5390>"},"metadata":{"image/png":{"height":255,"width":259}}},"99":{"data":{"image/png":"202a3656da3e2c82ea79277774b7cad5997e55a9","text/plain":"<matplotlib.figure.Figure at 0x7f41f523ff98>"},"metadata":{"image/png":{"height":255,"width":259}}}},"pos":103,"start":1557966407540,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":12,"id":"deaccf","input":"b","output":{"0":{"data":{"text/plain":"array([1, 2, 3])"},"exec_count":12,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"4183e2","input":"vetor_coluna","output":{"0":{"data":{"text/plain":"array([[1],\n       [2],\n       [3]])"},"exec_count":14,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"8cea6a","input":"vetor_linha=np.array([[1,2,3]]) # cria um vetor linha","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"bce7d0","input":"numeros.dtype","output":{"0":{"data":{"text/plain":"dtype('float64')"},"exec_count":16,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"d0e812","input":"vetor_linha","output":{"0":{"data":{"text/plain":"array([[1, 2, 3]])"},"exec_count":17,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"d3040f","input":"numeros","output":{"0":{"data":{"text/plain":"array([[  1.90657252e-02,   4.28180493e-01,   5.00000000e+01,\n          9.06423263e-02],\n       [  7.35581466e-01,   5.10557350e-01,   5.00000000e+01,\n          3.05358515e-01],\n       [  9.57031620e-02,   4.72088543e-01,   5.00000000e+01,\n          9.70031312e-01]])"},"exec_count":18,"output_type":"execute_result"}},"pos":59,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"2d7b98","input":"b.T","output":{"0":{"data":{"text/plain":"array([1, 2, 3])"},"exec_count":23,"output_type":"execute_result"}},"pos":21,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"3f6f72","input":"vetor_coluna.T","output":{"0":{"data":{"text/plain":"array([[1, 2, 3]])"},"exec_count":24,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"be2434","input":"vetor_linha.T","output":{"0":{"data":{"text/plain":"array([[1],\n       [2],\n       [3]])"},"exec_count":25,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"525604","input":"empty_array = np.zeros((3,4))\nempty_array","output":{"0":{"data":{"text/plain":"array([[ 0.,  0.,  0.,  0.],\n       [ 0.,  0.,  0.,  0.],\n       [ 0.,  0.,  0.,  0.]])"},"exec_count":26,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"6cdefa","input":"one_array = np.ones((3,4))\none_array","output":{"0":{"data":{"text/plain":"array([[ 1.,  1.,  1.,  1.],\n       [ 1.,  1.,  1.,  1.],\n       [ 1.,  1.,  1.,  1.]])"},"exec_count":27,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"63cd0f","input":"x = np.array(range(12)).reshape(3,4)\nprint(x)","output":{"0":{"name":"stdout","output_type":"stream","text":"[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"37b15b","input":"a2 = np.array([[1,2],[3,4]])\na2 + 1","output":{"0":{"data":{"text/plain":"array([[2, 3],\n       [4, 5]])"},"exec_count":36,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"df9541","input":"a2 * 2","output":{"0":{"data":{"text/plain":"array([[2, 4],\n       [6, 8]])"},"exec_count":39,"output_type":"execute_result"}},"pos":47,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"5b572c","input":"a= [[1,2,3,9], [6,5,4,20],[2,4,5,7]]\nmatriz = np.array(a)\nmatriz\n","output":{"0":{"data":{"text/plain":"array([[ 1,  2,  3,  9],\n       [ 6,  5,  4, 20],\n       [ 2,  4,  5,  7]])"},"exec_count":4,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"0cef78","input":"a2/2","output":{"0":{"data":{"text/plain":"array([[ 0.5,  1. ],\n       [ 1.5,  2. ]])"},"exec_count":40,"output_type":"execute_result"}},"pos":48,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"1e4e05","input":"vetor_linha*vetor_coluna","output":{"0":{"data":{"text/plain":"array([[1, 2, 3],\n       [2, 4, 6],\n       [3, 6, 9]])"},"exec_count":44,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"ed3397","input":"randmat=np.random.rand(10,40)","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"c98c74","input":"a","output":{"0":{"data":{"text/plain":"[[1, 2, 3, 9], [6, 5, 4, 20], [2, 4, 5, 7]]"},"exec_count":5,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"50c349","input":"randmat[:].shape","output":{"0":{"data":{"text/plain":"(10, 40)"},"exec_count":50,"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"5319d1","input":"alista=[1,2,3]\nblista=[1,2,3]\nalista+blista","output":{"0":{"data":{"text/plain":"[1, 2, 3, 1, 2, 3]"},"exec_count":52,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"e302e2","input":"a1*b1-b1*a1","output":{"0":{"data":{"text/plain":"array([[0, 0],\n       [0, 0]])"},"exec_count":57,"output_type":"execute_result"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"2959be","input":"type(matriz)\n","output":{"0":{"data":{"text/plain":"numpy.ndarray"},"exec_count":6,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":65,"id":"dfb056","input":"numeros.astype(int)","output":{"0":{"data":{"text/plain":"array([[ 2,  1, 50,  2],\n       [ 2, 10, 50,  7],\n       [ 1,  0, 50,  0]])"},"exec_count":65,"output_type":"execute_result"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":66,"id":"92e3c5","input":"numeros>5","output":{"0":{"data":{"text/plain":"array([[False, False,  True, False],\n       [False,  True,  True,  True],\n       [False, False,  True, False]], dtype=bool)"},"exec_count":66,"output_type":"execute_result"}},"pos":60,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"2d77ec","input":"numeros[:, 0 ] > 0.1","output":{"0":{"data":{"text/plain":"array([ True,  True,  True], dtype=bool)"},"exec_count":67,"output_type":"execute_result"}},"pos":61,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"26b879","input":"numeros[:, 2] == 50.","output":{"0":{"data":{"text/plain":"array([ True,  True,  True], dtype=bool)"},"exec_count":68,"output_type":"execute_result"}},"pos":62,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"748ba3","input":"type(a)","output":{"0":{"data":{"text/plain":"list"},"exec_count":7,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":70,"id":"783c44","input":"high_quality = numeros[:,1] > 2\nnumeros[high_quality,:]","output":{"0":{"data":{"text/plain":"array([[  2.73587053,  10.        ,  50.        ,   7.54433951]])"},"exec_count":70,"output_type":"execute_result"}},"pos":64,"type":"cell"}
{"cell_type":"code","exec_count":76,"id":"89de6c","input":"numeros.ravel().shape","output":{"0":{"data":{"text/plain":"(12,)"},"exec_count":76,"output_type":"execute_result"}},"pos":69,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"0b4998","input":"np.vstack((numeros, [1,2,3,4]))","output":{"0":{"data":{"text/plain":"array([[  2.06710983,   1.76906381,  50.        ,   2.12887744],\n       [  2.73587053,  10.        ,  50.        ,   7.54433951],\n       [  1.68564568,   0.94910583,  50.        ,   0.75461962],\n       [  1.        ,   2.        ,   3.        ,   4.        ]])"},"exec_count":77,"output_type":"execute_result"}},"pos":71,"type":"cell"}
{"cell_type":"code","exec_count":78,"id":"0a0ea2","input":"np.hstack((numeros,[[1],[2],[3]]))","output":{"0":{"data":{"text/plain":"array([[  2.06710983,   1.76906381,  50.        ,   2.12887744,   1.        ],\n       [  2.73587053,  10.        ,  50.        ,   7.54433951,   2.        ],\n       [  1.68564568,   0.94910583,  50.        ,   0.75461962,   3.        ]])"},"exec_count":78,"output_type":"execute_result"}},"pos":73,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"27c0e5","input":"matriz1 = np.array(a, float)\nmatriz1","output":{"0":{"data":{"text/plain":"array([[  1.,   2.,   3.,   9.],\n       [  6.,   5.,   4.,  20.],\n       [  2.,   4.,   5.,   7.]])"},"exec_count":8,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"d2ce82","input":"eig_val, eig_vec = LA.eig(arr2d)","pos":77,"type":"cell"}
{"cell_type":"code","exec_count":82,"id":"dc6bdb","input":"LA.eig(arr2d)","output":{"0":{"data":{"text/plain":"(array([  1.05664180e+03,   6.03582029e+01,   2.37768608e-14]),\n array([[ 0.34860455,  0.57805139,  0.41356846],\n        [ 0.38695105,  0.64163704, -0.81514943],\n        [ 0.8536649 , -0.50414135,  0.4055768 ]]))"},"exec_count":82,"output_type":"execute_result"}},"pos":78,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"73aae8","input":"eig_val","output":{"0":{"data":{"text/plain":"array([  1.05664180e+03,   6.03582029e+01,   2.37768608e-14])"},"exec_count":83,"output_type":"execute_result"}},"pos":79,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"1c10e0","input":"eig_vec","output":{"0":{"data":{"text/plain":"array([[ 0.34860455,  0.57805139,  0.41356846],\n       [ 0.38695105,  0.64163704, -0.81514943],\n       [ 0.8536649 , -0.50414135,  0.4055768 ]])"},"exec_count":84,"output_type":"execute_result"}},"pos":80,"type":"cell"}
{"cell_type":"code","exec_count":85,"id":"17a094","input":"LA.norm(arr2d) # calcula a norma da matriz\n","output":{"0":{"data":{"text/plain":"1083.3655892633844"},"exec_count":85,"output_type":"execute_result"}},"pos":81,"type":"cell"}
{"cell_type":"code","exec_count":86,"id":"26f501","input":"LA.det(arr2d) # calcula determinante\n","output":{"0":{"data":{"text/plain":"1.2808527571905839e-09"},"exec_count":86,"output_type":"execute_result"}},"pos":82,"type":"cell"}
{"cell_type":"code","exec_count":87,"id":"52b030","input":"LA.inv(arr2d) # calcula inversa","output":{"0":{"data":{"text/plain":"array([[  1.79388301e+13,  -1.61611082e+13,  -5.73046402e-03],\n       [ -3.53576941e+13,   3.18537785e+13,  -3.19792599e-03],\n       [  1.75921860e+13,  -1.58488163e+13,   4.04210533e-03]])"},"exec_count":87,"output_type":"execute_result"}},"pos":83,"type":"cell"}
{"cell_type":"code","exec_count":89,"id":"53b610","input":"arr1 = np.array([[2,3], [3,4]])\narr2 = np.array([4,5])\nresults = np.linalg.solve(arr1, arr2)\nresults","output":{"0":{"data":{"text/plain":"array([-1.,  2.])"},"exec_count":89,"output_type":"execute_result"}},"pos":86,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"0884ad","input":"matriz.shape","output":{"0":{"data":{"text/plain":"(3, 4)"},"exec_count":9,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"fb530c","input":"np.argwhere(numeros >40)","output":{"0":{"data":{"text/plain":"array([[0, 2],\n       [1, 2],\n       [2, 2]])"},"exec_count":95,"output_type":"execute_result"}},"pos":66,"type":"cell"}
{"cell_type":"markdown","id":"0bd233","input":"### Operações entre arrays de tamanhos distintos\n- Em muitos casos, é necessário trabalhar com arrays com um número distinto de elementos, ou de formas diferentes. Nesse caso, é necessário entender as regras do NumPy que difundem as informações do array menor para o array maior.\n- O termo difusão (broadcasting) descreve como NumPy trata arrays de dimensões diferentes em operações aritméticas. O array menor é “difundido” a uma array maior para que tenham as mesmas dimensões. No caso de um escalar, o valor do escalar é difundido para todos os elementos do array maior, como no exemplo:","pos":45,"type":"cell"}
{"cell_type":"markdown","id":"20c5a7","input":"Para criar um vetor coluna temos que fazer:\n","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"2f718f","input":"### Convertendo tipos de dados\n- Você pode usar o método **numpy.ndarray.astype** para converter uma matriz em um tipo diferente. O método realmente copiará a matriz e retornará uma nova matriz com o tipo de dados especificado. ","pos":56,"type":"cell"}
{"cell_type":"markdown","id":"2fb837","input":"## Exercícios para fazer na aula\n- Encontre índices de elementos não nulos de [1,2,0,0,4,0] \n- Extrair a parte inteira de uma matriz aleatória\n- Considere uma matriz aleatória de 10$\\times$2 que represente coordenadas cartesianas, converta-as em coordenadas polares\n- Considere um vetor aleatório com forma (100,2) representando coordenadas, encontre as  distâncias entre todos os pontos \n- Considere o vetor [1, 2, 3, 4, 5], como construir um novo vetor com 3 zeros consecutivos intercalados entre cada valor?","pos":87,"type":"cell"}
{"cell_type":"markdown","id":"4b1fed","input":"Para criar um vetor linha fazemos:\n","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"5606bf","input":"## Operações Diversas","pos":67,"type":"cell"}
{"cell_type":"markdown","id":"5cd8e6","input":"Para inserir uma coluna. Note que temos que criar um vetor coluna.\n","pos":72,"type":"cell"}
{"cell_type":"markdown","id":"5e43c1","input":"- É útil criar uma matriz com todos os elementos zero nos casos em que você precisa de uma matriz de tamanho fixo, mas ainda não tem nenhum valor para ela.","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"5fd999","input":"### Matriz de números aleatórios (Random)\n- É possível criar uma matriz onde cada elemento é um número aleatório usando `numpy.random.rand`. Veja o exemplo a seguir: ","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"60abc4","input":"## Arrays\n- Uma matriz numpy é uma tabela de valores, todos do mesmo tipo, e é indexada por uma tupla de inteiros não negativos.\n- O número de dimensões é o grau da matriz.\n- A forma de uma matriz é uma tupla de inteiros que dão o tamanho da matriz ao longo de cada dimensão.\n- Podemos inicializar matrizes numpy de listas concatenadas de Python e acessar elementos usando colchetes:","pos":2,"slide":"subslide","type":"cell"}
{"cell_type":"markdown","id":"6729ca","input":"### Índices e fatias\n- Para acessar um elemento de uma lista de dimensão $n$ é necessário fornecer o valor de n índices, ou seja, 2 índices para uma matriz bidimensional, 3 índices para uma matriz tridimensional e assim por diante.\n- Embora seja possível usar a mesma forma para acessar elementos de um array, uma forma mais eficiente é separando os valores por vírgulas, como a seguir:","pos":32,"type":"cell"}
{"cell_type":"markdown","id":"77e1ae","input":"- Podemos verificar o número de linhas e colunas em nossos dados usando a propriedade `shape` de _arrays_ NumPy:","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"871319","input":"Para retornar os índices","pos":65,"type":"cell"}
{"cell_type":"markdown","id":"8790a5","input":"### Criando matriz com Reshape","pos":30,"type":"cell"}
{"cell_type":"markdown","id":"90af69","input":"### Operações com arrays\n\nO NumPy oferece muito mais recursos que listas para operação e manipulação de arrays que facilitam a computação científica.","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"9acf9c","input":"- NumPy tem vários tipos de dados diferentes, que mapeiam principalmente para tipos de dados Python, como float e str . Você pode encontrar uma lista completa dos tipos de dados NumPy aqui , mas aqui estão alguns importantes:\n\n- **float** - dados numéricos de ponto flutuante.\n- **int** - dados inteiros.\n- **string** - dados de caracteres.\n- **object** - Objetos Python.\n \n- Os tipos de dados, adicionalmente, terminam com um sufixo que indica quantos bits de memória eles ocupam. Assim, int32 é um tipo de dados inteiros de 32 bits e float64 é um tipo de dados float de 64 bits.","pos":55,"type":"cell"}
{"cell_type":"markdown","id":"b07029","input":"## Jogo da Vida","pos":100,"type":"cell"}
{"cell_type":"markdown","id":"b82185","input":"Resolve sistemas lineares na forma\n\n$$ a x + b y = c $$\n$$ d x + e y = f $$","pos":84,"type":"cell"}
{"cell_type":"markdown","id":"b9d46a","input":"Calcula os autovalores:","pos":76,"type":"cell"}
{"cell_type":"markdown","id":"bb63d0","input":"$$\\left(\\begin{array} \n a a & b \\\\\nd & e \n\\end{array}\\right)\\cdot\n\\left(\n\\begin{array}\nx x \\\\\ny\n\\end{array}\n\\right)=\n\\left(\n\\begin{array}\nc c \\\\\nf\n\\end{array}\n\\right)\n$$","pos":85,"type":"cell"}
{"cell_type":"markdown","id":"bee49d","input":"## Álgebra Linear","pos":74,"type":"cell"}
{"cell_type":"markdown","id":"c86e28","input":"# Numpy","pos":0,"slide":"slide","type":"cell"}
{"cell_type":"markdown","id":"ca3817","input":"### Tipos de dados NumPy\n-  NumPy armazena valores usando seus próprios tipos de dados, que são distintos de tipos Python como **float** e **str** . Isso ocorre porque o núcleo do NumPy é escrito em uma linguagem de programação chamada C, que armazena dados de forma diferente dos tipos de dados Python. Os tipos de dados NumPy mapeiam entre Python e C, permitindo-nos usar matrizes NumPy sem nenhum engate de conversão.\n- Você pode encontrar o tipo de dados de uma matriz NumPy acessando a propriedade dtype:","pos":53,"type":"cell"}
{"cell_type":"markdown","id":"cf8cc6","input":"### Exercício 1 - Jogo da Vida (0.25)\n- O Jogo da Vida (The Game of Life) é um autômato celular (cellular automaton) introduzido por John Horton Conway em 1970. Um automato celular consiste de uma rede de células. Cada célula pode estar em um número finito de estados, como morta ou viva. O “jogo” é na verdade uma simulação que permite observar a evolução de um processo a partir de uma certa condição inicial.\n- O jogo se desenvolve sobre uma matriz bi-dimensional que pode ser tão grande quanto se queira. Vamos chamar essa matriz de mapa. Cada posição ou célula do mapa pode estar vazia (= célula morta) ou ocupada por um agente (= célula viva). Cada posição possui também até 8 posições vizinhas: imediatamente acima, abaixo, aos lados e nas diagonais. Em um determinado instante, o mapa contém uma geração de agentes. A geração no instante seguinte é determinada segundo as regras abaixo:\n- Novos agentes nascem em células vazias que possuam exatamente 3 agentes vizinhos;\n- **Agentes com 2 ou 3 agentes vizinhos sobrevivem;**\n- **Agentes com menos de 2 agentes vizinhos morrem for falta de recursos;**\n- **Agentes com mais de 3 agentes vizinhos morrem por excesso de competição.**","pos":89,"type":"cell"}
{"cell_type":"markdown","id":"d60d71","input":"Para inserir uma linha em um `array`:","pos":70,"type":"cell"}
{"cell_type":"markdown","id":"d88524","input":"### Subsetting\n- Uma das operações poderosas que podemos realizar com uma matriz booleana e uma matriz NumPy é selecionar apenas algumas linhas ou colunas na matriz NumPy. Por exemplo, o código abaixo só irá selecionar linhas cuja qualidade é superior a 7 :","pos":63,"type":"cell"}
{"cell_type":"markdown","id":"dcef10","input":"### Matriz com zeros\n\n- Para começar, você pode criar uma matriz onde cada elemento é zero. O código a seguir criará uma matriz com 3 linhas e 4 colunas, onde cada elemento é 0 , usando `np.zeros`:","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"de14dc","input":"### NumPy Array Comparações\n- NumPy torna possível testar para ver se as linhas correspondem a certos valores usando operações de comparação matemática como < , > , >= , <= e == . Por exemplo, se queremos ver quais vinhos têm uma classificação de qualidade superior a 5 , podemos fazer o seguinte:","pos":58,"type":"cell"}
{"cell_type":"markdown","id":"de9b97","input":"### Atribuir valores a NumPy Arrays\n- Também podemos usar a indexação para atribuir valores a determinados elementos em arrays. Podemos fazer isso atribuindo diretamente ao valor indexado:","pos":49,"type":"cell"}
{"cell_type":"markdown","id":"eb86d6","input":"- Para achatar os dados, ou seja acabar com sua estrutura interna","pos":68,"type":"cell"}
{"cell_type":"markdown","id":"fe0f7b","input":"Numpy é a biblioteca essencial para computação científica em Python. Ela fornece um objeto que é essencialmente uma\n_array_ multidimensional e métodos de  alto desempenho para trabalhar com esses _arrays_. ","pos":1,"slide":"subslide","type":"cell"}
{"end":1557966169856,"exec_count":18,"id":"52fcc4","input":"numeros","kernel":"python3","output":{"0":{"data":{"text/plain":"30"},"exec_count":18}},"pos":49.5,"start":1557966169850,"state":"done","type":"cell"}
{"end":1557966258446,"exec_count":23,"id":"caf195","input":"numeros","kernel":"python3","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0]])"},"exec_count":23}},"pos":50.5,"start":1557966258428,"state":"done","type":"cell"}
{"id":0,"time":1557965678063,"type":"user"}
{"last_load":1557965677277,"type":"file"}