{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":79519744},"metadata":{"celltoolbar":"Slideshow","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","collapsed":true,"exec_count":0,"id":"3a67ca","input":"","pos":98,"state":"done","type":"cell"}
{"cell_type":"code","collapsed":true,"exec_count":0,"id":"de4864","input":"","pos":92,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"38677a","input":"import numpy as np","pos":3,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"9f09ae","input":"b=np.array([1,2,3])","pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"cebb2e","input":"a1 = np.array([[1,2],[3,4]])\nb1 = np.array([[0,2],[3,1]])\nsoma=a1+b1\nmultiplicacao=a1*b1\ndivisao=b1/a1\nprint('Soma:',soma)\nprint('Multiplicação:',multiplicacao)\nprint('Divisão:',divisao)","output":{"0":{"name":"stdout","output_type":"stream","text":"Soma: [[1 4]\n [6 5]]\nMultiplicação: [[0 4]\n [9 4]]\nDivisão: [[0.   1.  ]\n [1.   0.25]]\n"}},"pos":40,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"a69523","input":"b","output":{"0":{"data":{"text/plain":"array([1, 2, 3])"},"exec_count":11,"output_type":"execute_result"}},"pos":15,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"b03eaa","input":"a=np.array([[1,2,3]])\nnp.dot(a,a.T)","output":{"0":{"data":{"text/plain":"array([[14]])"},"exec_count":11,"output_type":"execute_result"}},"pos":42,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":13,"id":"4a487a","input":"vetor_coluna=np.array([[1],[2],[3]])\n","pos":17,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":14,"id":"db2255","input":"vetor_coluna","output":{"0":{"data":{"text/plain":"array([[1],\n       [2],\n       [3]])"},"exec_count":14,"output_type":"execute_result"}},"pos":18,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":15,"id":"621a8b","input":"vetor_coluna.T","output":{"0":{"data":{"text/plain":"array([[1, 2, 3]])"},"exec_count":15,"output_type":"execute_result"}},"pos":19,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":16,"id":"0e0c25","input":"numeros.dtype","output":{"0":{"data":{"text/plain":"dtype('float64')"},"exec_count":16,"output_type":"execute_result"}},"pos":55,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":16,"id":"795050","input":"vetor_linha.T","output":{"0":{"data":{"text/plain":"array([[1],\n       [2],\n       [3]])"},"exec_count":16,"output_type":"execute_result"}},"pos":20,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":17,"id":"043bd0","input":"b.T","output":{"0":{"data":{"text/plain":"array([1, 2, 3])"},"exec_count":17,"output_type":"execute_result"}},"pos":21,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":18,"id":"cefb8e","input":"vetor_linha*vetor_coluna","output":{"0":{"data":{"text/plain":"array([[1, 2, 3],\n       [2, 4, 6],\n       [3, 6, 9]])"},"exec_count":18,"output_type":"execute_result"}},"pos":22,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":19,"id":"e94bde","input":"empty_array = np.zeros((3,4))\nempty_array","output":{"0":{"data":{"text/plain":"array([[0., 0., 0., 0.],\n       [0., 0., 0., 0.],\n       [0., 0., 0., 0.]])"},"exec_count":19,"output_type":"execute_result"}},"pos":24,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":2,"id":"e11d18","input":"a= [[1,2,3,9], [6,5,4,20],[2,4,5,7]]\nmatriz = np.array(a)\nmatriz\n","output":{"0":{"data":{"text/plain":"array([[ 1,  2,  3,  9],\n       [ 6,  5,  4, 20],\n       [ 2,  4,  5,  7]])"},"exec_count":2,"output_type":"execute_result"}},"pos":4,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":20,"id":"9c6ef2","input":"one_array = np.ones((3,4))\none_array","output":{"0":{"data":{"text/plain":"array([[1., 1., 1., 1.],\n       [1., 1., 1., 1.],\n       [1., 1., 1., 1.]])"},"exec_count":20,"output_type":"execute_result"}},"pos":25,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":21,"id":"7766ba","input":"randmat=np.random.rand(10,40)","pos":28,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":22,"id":"1683cb","input":"randmat[:].shape","output":{"0":{"data":{"text/plain":"(10, 40)"},"exec_count":22,"output_type":"execute_result"}},"pos":29,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":23,"id":"4c1247","input":"lista = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]\nlista","output":{"0":{"data":{"text/plain":"[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]"},"exec_count":23,"output_type":"execute_result"}},"pos":33,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":23,"id":"683cc4","input":"numeros","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0]])"},"exec_count":23,"output_type":"execute_result"}},"pos":51,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":24,"id":"a1e3f3","input":"lista[0:-1]","output":{"0":{"data":{"text/plain":"[[0, 1, 2, 3], [4, 5, 6, 7]]"},"exec_count":24,"output_type":"execute_result"}},"pos":34,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":25,"id":"2edc07","input":"mat = np.array(lista)\nmat","output":{"0":{"data":{"text/plain":"array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]])"},"exec_count":25,"output_type":"execute_result"}},"pos":35,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":26,"id":"03a11e","input":"import numpy as np\nimport matplotlib","pos":95,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":27,"id":"e97c92","input":"mat[0:2,2:]## Duas ultimas colunas e linhas","output":{"0":{"data":{"text/plain":"array([[2, 3],\n       [6, 7]])"},"exec_count":27,"output_type":"execute_result"}},"pos":38,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":3,"id":"b61463","input":"a","output":{"0":{"data":{"text/plain":"[[1, 2, 3, 9], [6, 5, 4, 20], [2, 4, 5, 7]]"},"exec_count":3,"output_type":"execute_result"}},"pos":5,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":31,"id":"b01731","input":"x = np.array(range(12)).reshape(3,4)\nprint(x)","output":{"0":{"name":"stdout","output_type":"stream","text":"[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n"}},"pos":31,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":32,"id":"42bf72","input":"a1=np.array([[1,2],[0,3]])\nb1=np.array([[0,1],[1,0]])","pos":43,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":33,"id":"9a149b","input":"a1*b1-b1*a1","output":{"0":{"data":{"text/plain":"array([[0, 0],\n       [0, 0]])"},"exec_count":33,"output_type":"execute_result"}},"pos":44,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":35,"id":"c12434","input":"a2 = np.array([[1,2],[3,4]])\na2 + [1]","output":{"0":{"data":{"text/plain":"array([[2, 3],\n       [4, 5]])"},"exec_count":35,"output_type":"execute_result"}},"pos":46,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":36,"id":"8f26c7","input":"a2 * 2","output":{"0":{"data":{"text/plain":"array([[2, 4],\n       [6, 8]])"},"exec_count":36,"output_type":"execute_result"}},"pos":47,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":37,"id":"44e75e","input":"a2/2","output":{"0":{"data":{"text/plain":"array([[0.5, 1. ],\n       [1.5, 2. ]])"},"exec_count":37,"output_type":"execute_result"}},"pos":48,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":38,"id":"27c1a7","input":"numeros=10*np.random.randint(0,1,size=(2, 4))\nnumeros[ 1 , 1] = 10\nnumeros[:, 2 ] = 50","pos":50,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":39,"id":"1db740","input":" np.random.randint(5,10, size=(2, 4))","output":{"0":{"data":{"text/plain":"array([[8, 8, 7, 8],\n       [6, 7, 5, 7]])"},"exec_count":39,"output_type":"execute_result"}},"pos":52,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":4,"id":"b29e62","input":"type(matriz)\n","output":{"0":{"data":{"text/plain":"numpy.ndarray"},"exec_count":4,"output_type":"execute_result"}},"pos":6,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":40,"id":"108371","input":"numeros","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0]])"},"exec_count":40,"output_type":"execute_result"}},"pos":53,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":42,"id":"91433d","input":"numeros.astype(float)","output":{"0":{"data":{"text/plain":"array([[ 0.,  0., 50.,  0.],\n       [ 0., 10., 50.,  0.]])"},"exec_count":42,"output_type":"execute_result"}},"pos":58,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":43,"id":"215644","input":"numeros","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0]])"},"exec_count":43,"output_type":"execute_result"}},"pos":60,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":44,"id":"52a84c","input":"numeros[:, 2] == 50.","output":{"0":{"data":{"text/plain":"array([ True,  True])"},"exec_count":44,"output_type":"execute_result"}},"pos":63,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":47,"id":"050e94","input":"high_quality = numeros[:,1] > 2\nnumeros[high_quality]","output":{"0":{"data":{"text/plain":"array([[ 0, 10, 50,  0]])"},"exec_count":47,"output_type":"execute_result"}},"pos":65,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":48,"id":"6c5f78","input":"high_quality","output":{"0":{"data":{"text/plain":"array([False,  True])"},"exec_count":48,"output_type":"execute_result"}},"pos":66,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":49,"id":"d20cea","input":"np.argwhere(numeros >40)","output":{"0":{"data":{"text/plain":"array([[0, 2],\n       [1, 2]])"},"exec_count":49,"output_type":"execute_result"}},"pos":68,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":5,"id":"acc7cb","input":"type(a)","output":{"0":{"data":{"text/plain":"list"},"exec_count":5,"output_type":"execute_result"}},"pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":50,"id":"306800","input":"numeros.ravel()","output":{"0":{"data":{"text/plain":"array([ 0,  0, 50,  0,  0, 10, 50,  0])"},"exec_count":50,"output_type":"execute_result"}},"pos":71,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":51,"id":"121045","input":"np.vstack((numeros, [1,2,3,4]))","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0],\n       [ 1,  2,  3,  4]])"},"exec_count":51,"output_type":"execute_result"}},"pos":73,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":52,"id":"92b2e0","input":"alista=[1,2,3]\nblista=[1,2,3]\nalista+blista","output":{"0":{"data":{"text/plain":"[1, 2, 3, 1, 2, 3]"},"exec_count":52,"output_type":"execute_result"}},"pos":41,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":54,"id":"767ac7","input":"numeros","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0],\n       [ 0, 10, 50,  0]])"},"exec_count":54,"output_type":"execute_result"}},"pos":74,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":58,"id":"331ce9","input":"np.hstack((numeros,[[1],[2]]))","output":{"0":{"data":{"text/plain":"array([[ 0,  0, 50,  0,  1],\n       [ 0, 10, 50,  0,  2]])"},"exec_count":58,"output_type":"execute_result"}},"pos":76,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":59,"id":"37e95e","input":"\nfrom numpy import linalg as LA\narr2d = np.array((  (100,200,300), \n          (111,222,333), \n          (129,461,795) ))\n\n","pos":78,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"73c534","input":"matriz1 = np.array(a, float)\nmatriz1","output":{"0":{"data":{"text/plain":"array([[ 1.,  2.,  3.,  9.],\n       [ 6.,  5.,  4., 20.],\n       [ 2.,  4.,  5.,  7.]])"},"exec_count":6,"output_type":"execute_result"}},"pos":8,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":60,"id":"3ce206","input":"eig_val, eig_vec = LA.eig(arr2d)","pos":80,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":61,"id":"86f28d","input":"LA.eig(arr2d)","output":{"0":{"data":{"text/plain":"(array([1.05664180e+03, 6.03582029e+01, 2.37768608e-14]),\n array([[ 0.34860455,  0.57805139,  0.41356846],\n        [ 0.38695105,  0.64163704, -0.81514943],\n        [ 0.8536649 , -0.50414135,  0.4055768 ]]))"},"exec_count":61,"output_type":"execute_result"}},"pos":81,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":62,"id":"01bd43","input":"eig_val","output":{"0":{"data":{"text/plain":"array([1.05664180e+03, 6.03582029e+01, 2.37768608e-14])"},"exec_count":62,"output_type":"execute_result"}},"pos":82,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":63,"id":"f10224","input":"eig_vec","output":{"0":{"data":{"text/plain":"array([[ 0.34860455,  0.57805139,  0.41356846],\n       [ 0.38695105,  0.64163704, -0.81514943],\n       [ 0.8536649 , -0.50414135,  0.4055768 ]])"},"exec_count":63,"output_type":"execute_result"}},"pos":83,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":66,"id":"127a2f","input":"np.dot(eig_vec[0],eig_vec[1].T)","output":{"0":{"data":{"text/plain":"0.1686719832514646"},"exec_count":66,"output_type":"execute_result"}},"pos":84,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":66,"id":"8b5d11","input":"numeros>5","output":{"0":{"data":{"text/plain":"array([[False, False,  True, False],\n       [False,  True,  True,  True],\n       [False, False,  True, False]], dtype=bool)"},"exec_count":66,"output_type":"execute_result"}},"pos":61,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":67,"id":"dfb934","input":"LA.norm(arr2d) # calcula a norma da matriz\n","output":{"0":{"data":{"text/plain":"1083.3655892633844"},"exec_count":67,"output_type":"execute_result"}},"pos":85,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":67,"id":"f18b0f","input":"numeros[:, 0 ] > 0.1","output":{"0":{"data":{"text/plain":"array([ True,  True,  True], dtype=bool)"},"exec_count":67,"output_type":"execute_result"}},"pos":62,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":68,"id":"179e4a","input":"LA.det(arr2d) # calcula determinante\n","output":{"0":{"data":{"text/plain":"1.280852757190584e-09"},"exec_count":68,"output_type":"execute_result"}},"pos":86,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":69,"id":"0a19c9","input":"LA.inv(arr2d) # calcula inversa","output":{"0":{"data":{"text/plain":"array([[ 1.79388301e+13, -1.61611082e+13, -5.73046402e-03],\n       [-3.53576941e+13,  3.18537785e+13, -3.19792599e-03],\n       [ 1.75921860e+13, -1.58488163e+13,  4.04210533e-03]])"},"exec_count":69,"output_type":"execute_result"}},"pos":87,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"5cae95","input":"matriz.shape","output":{"0":{"data":{"text/plain":"(3, 4)"},"exec_count":7,"output_type":"execute_result"}},"pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"6fe378","input":"mat[1] ##Pegando penúltima linha","output":{"0":{"data":{"text/plain":"array([4, 5, 6, 7])"},"exec_count":7,"output_type":"execute_result"}},"pos":36,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":70,"id":"3746c9","input":"arr1 = np.array([[2,3], [3,4]])\narr2 = np.array([4,5])\nresults = np.linalg.solve(arr1, arr2)\nresults","output":{"0":{"data":{"text/plain":"array([-1.,  2.])"},"exec_count":70,"output_type":"execute_result"}},"pos":90,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":71,"id":"c8cf7a","input":"def step(matlife):\n    matviz=np.zeros((size,size))\n    for i in range(size):\n        for j in range(size):        \n            matviz[i,j]=matlife[(i+1)%size,j]+matlife[(i-1)%size,j]+matlife[i,(j+1) % size]+matlife[i,(j-1) % size]+matlife[(i+1)%size,(j+1) % size]+matlife[(i-1)%size,(j-1)% size]+matlife[(i-1)%size,(j+1) % size]+matlife[(i+1)%size,(j-1) % size]\n    matlife2=np.zeros((size,size))\n    bool1=matviz==2\n    bool2=matviz==3\n    matlife2[(bool1|bool2)]=1\n    return matlife2","pos":96,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":72,"id":"32a434","input":"size=20\nmatlife=np.random.randint(2,size=(size,size))\nmatplotlib.pyplot.matshow(matlife)\nL=[]\nfor i in range(100):\n    matlife=step(matlife)\n    matplotlib.pyplot.matshow(matlife)","output":{"0":{"name":"stderr","output_type":"stream","text":"/usr/lib/python3/dist-packages/matplotlib/pyplot.py:528: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).\n  max_open_warning, RuntimeWarning)\n"},"1":{"data":{"image/png":"028bd939ef0e13b8dbc00957535884d0ba6a471a","text/plain":"<matplotlib.figure.Figure at 0x7f258b8cfba8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"10":{"data":{"image/png":"d533cdaca550325b989be75d6b639c5239160683","text/plain":"<matplotlib.figure.Figure at 0x7f25627d82e8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"11":{"data":{"image/png":"484498d2f8b032e0bdb15f07881d6254cc338c05","text/plain":"<matplotlib.figure.Figure at 0x7f2562799048>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"12":{"data":{"image/png":"a4756ca689c38a502b1c835bb3eb074ccdfc8055","text/plain":"<matplotlib.figure.Figure at 0x7f2562744e48>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"13":{"data":{"image/png":"376bc50db2a6b9cfda0fd8b6a43bc9bb7feec795","text/plain":"<matplotlib.figure.Figure at 0x7f2562703d68>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"14":{"data":{"image/png":"6d0d0072e834e2f3960182b3c7d18ef427745444","text/plain":"<matplotlib.figure.Figure at 0x7f25626c6a58>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"15":{"data":{"image/png":"77d1d11a8c13d7fd2c9cacb9bce7625ac50e0b14","text/plain":"<matplotlib.figure.Figure at 0x7f25626857b8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"16":{"data":{"image/png":"02f5679066ddd55262cfb333c357370c944be1d5","text/plain":"<matplotlib.figure.Figure at 0x7f256263a6d8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"17":{"data":{"image/png":"7c4726f5708f0ad70f22be117617e7767ff04cbc","text/plain":"<matplotlib.figure.Figure at 0x7f25625f95f8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"18":{"data":{"image/png":"efffa9688fc499eaac5af4100d689d9cb7061f67","text/plain":"<matplotlib.figure.Figure at 0x7f25625ba2e8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"19":{"data":{"image/png":"da621f6d077034a864f4e406c137590f023ab569","text/plain":"<matplotlib.figure.Figure at 0x7f2562578048>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"2":{"data":{"image/png":"b3c9619a3d9c87df70ee357ea2e288624bc41109","text/plain":"<matplotlib.figure.Figure at 0x7f258fa97128>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"20":{"data":{"image/png":"9059e8702ebb7b54af959f761320fa8d5239c5b8","text/plain":"<matplotlib.figure.Figure at 0x7f2562593780>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"21":{"data":{"image/png":"a3454cd766b396e5c7951bbea4eea2ca1afdff79","text/plain":"<matplotlib.figure.Figure at 0x7f2562553080>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"22":{"data":{"image/png":"6176ad7db27d9fea0f5875b257491610275f5c1b","text/plain":"<matplotlib.figure.Figure at 0x7f256250fa58>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"23":{"data":{"image/png":"9567f923d3798be3e30555ddedee9031bdf960cc","text/plain":"<matplotlib.figure.Figure at 0x7f25624ce438>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"24":{"data":{"image/png":"c0d2a9c781d0c46ef9ae23a007bb50f9033ab4dc","text/plain":"<matplotlib.figure.Figure at 0x7f2562485978>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"25":{"data":{"image/png":"c9c1300833ddcede04253bce143c016195554c50","text/plain":"<matplotlib.figure.Figure at 0x7f25624453c8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"26":{"data":{"image/png":"a2b76478b5b463cc8dcd1f43953882a6d5e898e5","text/plain":"<matplotlib.figure.Figure at 0x7f2562407048>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"27":{"data":{"image/png":"c4b39426771bfd26b2d7e3c17f916dd274c04b82","text/plain":"<matplotlib.figure.Figure at 0x7f25623bfcf8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"28":{"data":{"image/png":"03c96bf200e4d5a6a3e90964c8164e3f41a7752a","text/plain":"<matplotlib.figure.Figure at 0x7f2562374b38>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"29":{"data":{"image/png":"2ae48770c9bc722225bbdf38e47f3614f4c18163","text/plain":"<matplotlib.figure.Figure at 0x7f2562336a58>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"3":{"data":{"image/png":"cdb11f1a9f93ab227249181683f0c345212b466e","text/plain":"<matplotlib.figure.Figure at 0x7f2564a03da0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"30":{"data":{"image/png":"2c4ac664f02b5c5b7564335b2736b4b2e8472e5e","text/plain":"<matplotlib.figure.Figure at 0x7f25622f55f8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"31":{"data":{"image/png":"9b64988ce45a866c5c08f57f02ea9724a0b34d6e","text/plain":"<matplotlib.figure.Figure at 0x7f25622b5278>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"32":{"data":{"image/png":"511891c8057ea1694d1d82b6756a4b4ba4cea248","text/plain":"<matplotlib.figure.Figure at 0x7f2562264cf8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"33":{"data":{"image/png":"8b8444736bd9db13fed6633183216fdc95cbb054","text/plain":"<matplotlib.figure.Figure at 0x7f2562224c18>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"34":{"data":{"image/png":"72d70501754c9cf92bbd6854463f5238ec2b36fe","text/plain":"<matplotlib.figure.Figure at 0x7f25621e8898>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"35":{"data":{"image/png":"321df8ed515c1f0cc09b9bf03e640f9d5d5c5717","text/plain":"<matplotlib.figure.Figure at 0x7f25621a7518>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"36":{"data":{"image/png":"20b0fdb8e6688c5cb3eb3a99048e29c3680a6d57","text/plain":"<matplotlib.figure.Figure at 0x7f25621d6eb8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"37":{"data":{"image/png":"df1e449370ac4ebaa9bea245cb9c858f6d318fe6","text/plain":"<matplotlib.figure.Figure at 0x7f2562195dd8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"38":{"data":{"image/png":"64bf04fba0eec849fbcde3623fcb5fab825d4851","text/plain":"<matplotlib.figure.Figure at 0x7f2562158a58>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"39":{"data":{"image/png":"f9cf9d69c3056070091162cfee0021699673a164","text/plain":"<matplotlib.figure.Figure at 0x7f25621196d8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"4":{"data":{"image/png":"a6fcc66b9e89df13024f2154b45b6c690279dbbf","text/plain":"<matplotlib.figure.Figure at 0x7f25628e2c88>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"40":{"data":{"image/png":"3dde67691a10ce5198db17486aff264837f3eae7","text/plain":"<matplotlib.figure.Figure at 0x7f25620cd0b8>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"41":{"data":{"image/png":"72597580eee7056f899e5df25f76eb225ee6fc2b","text/plain":"<matplotlib.figure.Figure at 0x7f2562088f98>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"42":{"data":{"image/png":"15adc29a1a29f50f916b2cd9bad08dcc8ff40b86","text/plain":"<matplotlib.figure.Figure at 0x7f2562048be0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"43":{"data":{"image/png":"9a004035ec2cde0352dc15a7b0938608a422db35","text/plain":"<matplotlib.figure.Figure at 0x7f2562008860>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"44":{"data":{"image/png":"f43de7faeb63a4f58c06f8be4bb5454376e2aea1","text/plain":"<matplotlib.figure.Figure at 0x7f2561fbc240>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"45":{"data":{"image/png":"50d834511d034d55aed370b63e81cd1b807beb3a","text/plain":"<matplotlib.figure.Figure at 0x7f2561f7d160>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"46":{"data":{"image/png":"113fa3b972f4244509d33a8013d430d5a2db6844","text/plain":"<matplotlib.figure.Figure at 0x7f2561f39d30>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"47":{"data":{"image/png":"bf8e2b433e3a42bb244b92923447a726ffd63f15","text/plain":"<matplotlib.figure.Figure at 0x7f2561ef99b0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"48":{"data":{"image/png":"8b99c5e02988f56fe24c137a3b9303c3f0c67848","text/plain":"<matplotlib.figure.Figure at 0x7f2561eac400>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"49":{"data":{"image/png":"2de48505df7a795148459bd9dd16a17b6be5db05","text/plain":"<matplotlib.figure.Figure at 0x7f2561e6e320>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"5":{"data":{"image/png":"9566c344d68a07a0b92e2799bf951350fa06e488","text/plain":"<matplotlib.figure.Figure at 0x7f25628bef98>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"50":{"data":{"image/png":"50ec44e2b0ab41fb722f227ec6054548f894066c","text/plain":"<matplotlib.figure.Figure at 0x7f2561e29f60>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"51":{"data":{"image/png":"0050d85db4ad7fb416db8941c377cc6aac3311cf","text/plain":"<matplotlib.figure.Figure at 0x7f2561deabe0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"52":{"data":{"image/png":"75148ca39b2e481883a1e26ae980167df2573906","text/plain":"<matplotlib.figure.Figure at 0x7f2561d9e5c0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"53":{"data":{"image/png":"cca5099a0daffed750940ab435e80e90fa89b8c3","text/plain":"<matplotlib.figure.Figure at 0x7f2561d5e4e0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"54":{"data":{"image/png":"97ed8dc7222d24ff5e7db726c50b39c232d8d1ec","text/plain":"<matplotlib.figure.Figure at 0x7f2561d1f160>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"55":{"data":{"image/png":"3e2bd05af5d0e1f7d639ada830a81c8e282039b5","text/plain":"<matplotlib.figure.Figure at 0x7f2561d59da0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"56":{"data":{"image/png":"b001332fc6eb6cdbbd955c5dfeef89a5b99e5625","text/plain":"<matplotlib.figure.Figure at 0x7f2561d0e780>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"57":{"data":{"image/png":"832c85b6c2339e241c5b96be50c98b1aa49040df","text/plain":"<matplotlib.figure.Figure at 0x7f2561ccf6a0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"58":{"data":{"image/png":"e2f117626d087645485f073e26343393f1f4024e","text/plain":"<matplotlib.figure.Figure at 0x7f2561c8f390>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"59":{"data":{"image/png":"c75b81a3591dcf30d9c9529ec8688d7f956d00bd","text/plain":"<matplotlib.figure.Figure at 0x7f2561c4bef0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"6":{"data":{"image/png":"c5b9ef7567fd68650904a61f070c281d0b3b8d41","text/plain":"<matplotlib.figure.Figure at 0x7f2562862518>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"60":{"data":{"image/png":"5df4958a00843f12319301205bf10634f0c828b8","text/plain":"<matplotlib.figure.Figure at 0x7f2561bfd940>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"61":{"data":{"image/png":"aafbf1d53a94a3a2ddc77d5add2fc8f28f1d421c","text/plain":"<matplotlib.figure.Figure at 0x7f2561bbf860>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"62":{"data":{"image/png":"e9c1a03d66f5ed5a3ce47a35189aa8b3d4480a09","text/plain":"<matplotlib.figure.Figure at 0x7f2561b804e0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"63":{"data":{"image/png":"33d2978654be7f02c2566718e93235a57d90a51c","text/plain":"<matplotlib.figure.Figure at 0x7f2561b40160>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"64":{"data":{"image/png":"2e0621e7fc21909c71d6d8fd4c1a1aecf95d7930","text/plain":"<matplotlib.figure.Figure at 0x7f2561aefb00>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"65":{"data":{"image/png":"26a5596de90f6f2671244a1b0f1ccd58ef13dd26","text/plain":"<matplotlib.figure.Figure at 0x7f2561aae8d0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"66":{"data":{"image/png":"5f9980520fd42c4ef21e098a75ad6af1d00c068b","text/plain":"<matplotlib.figure.Figure at 0x7f2561a71470>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"67":{"data":{"image/png":"6b19076ff3e1700997fd487f1406f7e6a0923c74","text/plain":"<matplotlib.figure.Figure at 0x7f2561a32160>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"68":{"data":{"image/png":"8fdb09ba14295e7cbd61439afd236986b2b4d234","text/plain":"<matplotlib.figure.Figure at 0x7f2561ae95c0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"69":{"data":{"image/png":"4da7e7ec2b4e66f39dc10749a3658c0e96933883","text/plain":"<matplotlib.figure.Figure at 0x7f25619a0da0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"7":{"data":{"image/png":"7216f1ee25559c7b1f3204e9cb59245fd09d6dc9","text/plain":"<matplotlib.figure.Figure at 0x7f256289db70>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"70":{"data":{"image/png":"06d80b9754f2b53110a661c95363b0d7eba92417","text/plain":"<matplotlib.figure.Figure at 0x7f2561962a20>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"71":{"data":{"image/png":"25fa407b231ca9e9f886e1bdfe2d7a12fff82f68","text/plain":"<matplotlib.figure.Figure at 0x7f25619236a0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"72":{"data":{"image/png":"c0bb6536d441652b505fea222ae13e78c6a25934","text/plain":"<matplotlib.figure.Figure at 0x7f2561958438>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"73":{"data":{"image/png":"bca7dda025a62c8ff1e3ef00e084cb24a4dd77db","text/plain":"<matplotlib.figure.Figure at 0x7f2561915160>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"74":{"data":{"image/png":"bfa42bb606b0101d76438d1ca57336996da28399","text/plain":"<matplotlib.figure.Figure at 0x7f25618d2d30>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"75":{"data":{"image/png":"1ded74d2dc29c3d12eae92ba0e4eee0a175b50d4","text/plain":"<matplotlib.figure.Figure at 0x7f25618929b0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"76":{"data":{"image/png":"0ab32bcb0fb68148b100b9db81cb53ed78f788b2","text/plain":"<matplotlib.figure.Figure at 0x7f2561847390>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"77":{"data":{"image/png":"06ea2da1cce275c05829343f6b5356df0a5168c3","text/plain":"<matplotlib.figure.Figure at 0x7f25618084e0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"78":{"data":{"image/png":"fb78240a8698f7091bec2f000d7c36bb547d7ce1","text/plain":"<matplotlib.figure.Figure at 0x7f25617c81d0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"79":{"data":{"image/png":"094774ae777a6a37d129981c8555bb89d37df4c1","text/plain":"<matplotlib.figure.Figure at 0x7f2561786e10>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"8":{"data":{"image/png":"fb073a7fe73376538441fd1ffb2452960abb826b","text/plain":"<matplotlib.figure.Figure at 0x7f2562851f28>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"80":{"data":{"image/png":"d30dfce3bf528112f2ddc9726a8080ecb1e0bdfc","text/plain":"<matplotlib.figure.Figure at 0x7f2561739a20>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"81":{"data":{"image/png":"1f21c0b7b78354bfd82abbc921b930f9d846454a","text/plain":"<matplotlib.figure.Figure at 0x7f25616f8860>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"82":{"data":{"image/png":"6f6050246491db71ca915d554c251a1820824ec2","text/plain":"<matplotlib.figure.Figure at 0x7f25616bb470>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"83":{"data":{"image/png":"9a6b99622446e66fd6283bf6290a277c16e5fead","text/plain":"<matplotlib.figure.Figure at 0x7f256167c0f0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"84":{"data":{"image/png":"733b2d82d1f26a60eb04e3850f8ebb6ebb02ded9","text/plain":"<matplotlib.figure.Figure at 0x7f2561740470>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"85":{"data":{"image/png":"34bb36ca0335eb3af7d0b78033d2af1883cb4307","text/plain":"<matplotlib.figure.Figure at 0x7f25615e7160>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"86":{"data":{"image/png":"9025dde6eada7cc4d9e48ed5a21b9caa48b4949f","text/plain":"<matplotlib.figure.Figure at 0x7f25615a3b00>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"87":{"data":{"image/png":"b7a6c1a0cd230155e61a2ad20d092c036ecc7fdc","text/plain":"<matplotlib.figure.Figure at 0x7f2561564630>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"},"88":{"more_output":true},"9":{"data":{"image/png":"dd7b6f9255c188b7fa97a9d886c3c22812ec39e7","text/plain":"<matplotlib.figure.Figure at 0x7f25628148d0>"},"exec_count":72,"metadata":{"image/png":{"height":255,"width":259}},"output_type":"execute_result"}},"pos":97,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"a5007b","input":"vetor_linha=np.array([[1,2,3]]) # cria um vetor linha","pos":12,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":8,"id":"d9fa1b","input":"mat[:,2]## Pegando a terceira coluna","output":{"0":{"data":{"text/plain":"array([ 2,  6, 10])"},"exec_count":8,"output_type":"execute_result"}},"pos":37,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"0ce1d9","input":"vetor_linha","output":{"0":{"data":{"text/plain":"array([[1, 2, 3]])"},"exec_count":9,"output_type":"execute_result"}},"pos":13,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"024755","input":"Calcula os autovalores:","pos":79,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0a0d91","input":"- NumPy tem vários tipos de dados diferentes, que mapeiam principalmente para tipos de dados Python, como float e str . Você pode encontrar uma lista completa dos tipos de dados NumPy aqui , mas aqui estão alguns importantes:\n\n- **float** - dados numéricos de ponto flutuante.\n- **int** - dados inteiros.\n- **string** - dados de caracteres.\n- **object** - Objetos Python.\n \n- Os tipos de dados, adicionalmente, terminam com um sufixo que indica quantos bits de memória eles ocupam. Assim, int32 é um tipo de dados inteiros de 32 bits e float64 é um tipo de dados float de 64 bits.","pos":56,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"17583a","input":"- É útil criar uma matriz com todos os elementos zero nos casos em que você precisa de uma matriz de tamanho fixo, mas ainda não tem nenhum valor para ela.","pos":26,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"213b3b","input":"### NumPy Array Comparações\n- NumPy torna possível testar para ver se as linhas correspondem a certos valores usando operações de comparação matemática como < , > , >= , <= e == . \n","pos":59,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"264b74","input":"### Tipos de dados NumPy\n-  NumPy armazena valores usando seus próprios tipos de dados, que são distintos de tipos Python como **float** e **str** . Isso ocorre porque o núcleo do NumPy é escrito em uma linguagem de programação chamada C, que armazena dados de forma diferente dos tipos de dados Python. Os tipos de dados NumPy mapeiam entre Python e C, permitindo-nos usar matrizes NumPy sem nenhum engate de conversão.\n- Você pode encontrar o tipo de dados de uma matriz NumPy acessando a propriedade dtype:","pos":54,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"29efcf","input":"## Álgebra Linear","pos":77,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2bf9ee","input":"- Podemos verificar o número de linhas e colunas em nossos dados usando a propriedade `shape` de _arrays_ NumPy:","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"30c76b","input":"## Jogo da Vida","pos":94,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"56f877","input":"Para retornar os índices","pos":67,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5bbf6b","input":"### Índices e fatias\n- Para acessar um elemento de uma lista de dimensão $n$ é necessário fornecer o valor de n índices, ou seja, 2 índices para uma matriz bidimensional, 3 índices para uma matriz tridimensional e assim por diante.\n- Embora seja possível usar a mesma forma para acessar elementos de um array, uma forma mais eficiente é separando os valores por vírgulas, como a seguir:","pos":32,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"710830","input":"## Operações Diversas","pos":69,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"81c7ed","input":"### Exercício 1 - Jogo da Vida (0.25)\n- O Jogo da Vida (The Game of Life) é um autômato celular (cellular automaton) introduzido por John Horton Conway em 1970. Um automato celular consiste de uma rede de células. Cada célula pode estar em um número finito de estados, como morta ou viva. O “jogo” é na verdade uma simulação que permite observar a evolução de um processo a partir de uma certa condição inicial.\n- O jogo se desenvolve sobre uma matriz bi-dimensional que pode ser tão grande quanto se queira. Vamos chamar essa matriz de mapa. Cada posição ou célula do mapa pode estar vazia (= célula morta) ou ocupada por um agente (= célula viva). Cada posição possui também até 8 posições vizinhas: imediatamente acima, abaixo, aos lados e nas diagonais. Em um determinado instante, o mapa contém uma geração de agentes. A geração no instante seguinte é determinada segundo as regras abaixo:\n- Novos agentes nascem em células vazias que possuam exatamente 3 agentes vizinhos;\n- **Agentes com 2 ou 3 agentes vizinhos sobrevivem;**\n- **Agentes com menos de 2 agentes vizinhos morrem for falta de recursos;**\n- **Agentes com mais de 3 agentes vizinhos morrem por excesso de competição.**","pos":93,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"838ead","input":"$$\\left(\\begin{array} \n a a & b \\\\\nd & e \n\\end{array}\\right)\\cdot\n\\left(\n\\begin{array}\nx x \\\\\ny\n\\end{array}\n\\right)=\n\\left(\n\\begin{array}\nc c \\\\\nf\n\\end{array}\n\\right)\n$$","pos":89,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"856806","input":"# Numpy","pos":0,"slide":"slide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d6775","input":"## Arrays\n- Uma matriz numpy é uma tabela de valores, todos do mesmo tipo, e é indexada por uma tupla de inteiros não negativos.\n- O número de dimensões é o grau da matriz.\n- A forma de uma matriz é uma tupla de inteiros que dão o tamanho da matriz ao longo de cada dimensão.\n- Podemos inicializar matrizes numpy de listas concatenadas de Python e acessar elementos usando colchetes:","pos":2,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"93f89e","input":"Numpy é a biblioteca essencial para computação científica em Python. Ela fornece um objeto que é essencialmente uma\n_array_ multidimensional e métodos de  alto desempenho para trabalhar com esses _arrays_. ","pos":1,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"9ae683","input":"### Operações com arrays\n\nO NumPy oferece muito mais recursos que listas para operação e manipulação de arrays que facilitam a computação científica.","pos":39,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a41b1c","input":"### Matriz com zeros\n\n- Para começar, você pode criar uma matriz onde cada elemento é zero. O código a seguir criará uma matriz com 3 linhas e 4 colunas, onde cada elemento é 0 , usando `np.zeros`:","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a5a07d","input":"### Operações entre arrays de tamanhos distintos\n- Em muitos casos, é necessário trabalhar com arrays com um número distinto de elementos, ou de formas diferentes. Nesse caso, é necessário entender as regras do NumPy que difundem as informações do array menor para o array maior.\n- O termo difusão (broadcasting) descreve como NumPy trata arrays de dimensões diferentes em operações aritméticas. O array menor é “difundido” a uma array maior para que tenham as mesmas dimensões. No caso de um escalar, o valor do escalar é difundido para todos os elementos do array maior, como no exemplo:","pos":45,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b36091","input":"Para criar um vetor linha fazemos:\n","pos":11,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b9bec6","input":"Para inserir uma linha em um `array`:","pos":72,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ba5313","input":"Para inserir uma coluna. Note que temos que criar um vetor coluna.\n","pos":75,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bcfe5b","input":"Resolve sistemas lineares na forma\n\n$$ a x + b y = c $$\n$$ d x + e y = f $$","pos":88,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c09145","input":"### Criando matriz com Reshape","pos":30,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ca8f69","input":"### Atribuir valores a NumPy Arrays\n- Também podemos usar a indexação para atribuir valores a determinados elementos em arrays. Podemos fazer isso atribuindo diretamente ao valor indexado:","pos":49,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cd807e","input":"### Subsetting\n- Uma das operações poderosas que podemos realizar com uma matriz booleana e uma matriz NumPy é selecionar apenas algumas linhas ou colunas na matriz NumPy. Por exemplo, o código abaixo só irá selecionar linhas cuja qualidade é superior a 7 :","pos":64,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"da6312","input":"### Convertendo tipos de dados\n- Você pode usar o método **numpy.ndarray.astype** para converter uma matriz em um tipo diferente. O método realmente copiará a matriz e retornará uma nova matriz com o tipo de dados especificado. ","pos":57,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e55d79","input":"- Para achatar os dados, ou seja acabar com sua estrutura interna","pos":70,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e8176b","input":"Para criar um vetor coluna temos que fazer:\n","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"fac32f","input":"### Matriz de números aleatórios (Random)\n- É possível criar uma matriz onde cada elemento é um número aleatório usando `numpy.random.rand`. Veja o exemplo a seguir: ","pos":27,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ff12d7","input":"## Exercícios para fazer na aula\n- Encontre índices de elementos não nulos de [1,2,0,0,4,0] \n- Extrair a parte inteira de uma matriz aleatória\n- Considere uma matriz aleatória de 10$\\times$2 que represente coordenadas cartesianas, converta-as em coordenadas polares\n- Considere um vetor aleatório com forma (100,2) representando coordenadas, encontre as  distâncias entre todos os pontos \n- Considere o vetor [1, 2, 3, 4, 5], como construir um novo vetor com 3 zeros consecutivos intercalados entre cada valor?","pos":91,"state":"done","type":"cell"}
{"id":0,"time":1558720506774,"type":"user"}
{"last_load":1558717744373,"type":"file"}