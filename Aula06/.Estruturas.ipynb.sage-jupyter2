{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":79081472},"metadata":{"celltoolbar":"Slideshow","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1553879265290,"exec_count":1,"id":"68dae8","input":"s = {1, 1, 2, 4, 3}\nprint(s)\n","kernel":"python3","output":{"0":{"name":"stdout","text":"{1, 2, 3, 4}\n"}},"pos":2,"start":1553879265208,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879319447,"exec_count":4,"id":"f59022","input":"a = {1, 2, 3, 4}\nb = {3, 4, 5, 6}\nprint (a.union(b))","kernel":"python3","output":{"0":{"name":"stdout","text":"{1, 2, 3, 4, 5, 6}\n"}},"pos":5,"start":1553879319427,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879330988,"exec_count":5,"id":"2a1d63","input":"b","kernel":"python3","output":{"0":{"data":{"text/plain":"{3, 4, 5, 6}"},"exec_count":5}},"pos":6,"start":1553879330981,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879432347,"exec_count":10,"id":"93dcd6","input":"l1 = [1, 2, 3]\nl2 = [2, 4, 3]\nl3 = set(l1).intersection(l2)\nprint (l3)","kernel":"python3","output":{"0":{"name":"stdout","text":"{2, 3}\n"}},"pos":8,"start":1553879432299,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879586029,"exec_count":15,"id":"0320b2","input":"a = {1, 2, 3, 4}\nb = {3, 4, 5, 6}\nprint (a.symmetric_difference(b))","kernel":"python3","output":{"0":{"name":"stdout","text":"{1, 2, 5, 6}\n"}},"pos":12,"start":1553879585995,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879948404,"exec_count":16,"id":"17967d","input":"dicionario = {}","kernel":"python3","pos":17,"start":1553879948392,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879948962,"exec_count":17,"id":"e38789","input":"dicionario.update({\"chocolate\": 'propina'})","kernel":"python3","pos":18,"start":1553879948955,"state":"done","type":"cell"}
{"cell_type":"code","end":1553879965046,"exec_count":18,"id":"4f2911","input":"dicionario","kernel":"python3","output":{"0":{"data":{"text/plain":"{'chocolate': 'propina'}"},"exec_count":18}},"pos":20,"start":1553879965028,"state":"done","type":"cell"}
{"cell_type":"code","end":1553880053011,"exec_count":20,"id":"706727","input":"dias_semana = {'dom' : 0, 'seg' : 1, 'ter' : 2, 'qua' : 3,\\\n 'qui' : 4, 'sex' : 5, 'sab' : 6}","kernel":"python3","pos":22,"start":1553880052995,"state":"done","type":"cell"}
{"cell_type":"code","end":1553880715349,"exec_count":27,"id":"8cc928","input":"[key for key in dic_char.keys()]","kernel":"python3","output":{"0":{"data":{"text/plain":"[' ',\n '!',\n '\"',\n '#',\n '$',\n '%',\n '&',\n \"'\",\n '(',\n ')',\n '*',\n '+',\n ',',\n '-',\n '.',\n '/',\n '0',\n '1',\n '2',\n '3',\n '4',\n '5',\n '6']"},"exec_count":27}},"pos":34,"start":1553880715333,"state":"done","type":"cell"}
{"cell_type":"code","end":1553880720005,"exec_count":28,"id":"dfe7c0","input":"[value for value in dic_char.values()]","kernel":"python3","output":{"0":{"data":{"text/plain":"[32,\n 33,\n 34,\n 35,\n 36,\n 37,\n 38,\n 39,\n 40,\n 41,\n 42,\n 43,\n 44,\n 45,\n 46,\n 47,\n 48,\n 49,\n 50,\n 51,\n 52,\n 53,\n 54]"},"exec_count":28}},"pos":35,"start":1553880719993,"state":"done","type":"cell"}
{"cell_type":"code","end":1553880770906,"exec_count":29,"id":"cfe272","input":"dic_char={chr(i):i for i in range(255) }\nstr=input(\"Entre com uma string\")\nlis=[dic_char[letter] for letter in str]\nlis","kernel":"python3","output":{"0":{"name":"input","opts":{"password":false,"prompt":"Entre com uma string"},"value":"teste"},"1":{"data":{"text/plain":"[116, 101, 115, 116, 101]"},"exec_count":29}},"pos":37,"start":1553880738891,"state":"done","type":"cell"}
{"cell_type":"code","end":1553881196028,"exec_count":31,"id":"245ecf","input":"pontos_cardeais = dict([('N', 0), ('L', 1), ('S', 2), ('O', 3)])","kernel":"python3","pos":25,"start":1553881196007,"state":"done","type":"cell"}
{"cell_type":"code","end":1553881198431,"exec_count":32,"id":"772a74","input":"pontos_cardeais","kernel":"python3","output":{"0":{"data":{"text/plain":"{'L': 1, 'N': 0, 'O': 3, 'S': 2}"},"exec_count":32}},"pos":26,"start":1553881198404,"state":"done","type":"cell"}
{"cell_type":"code","end":1553881210304,"exec_count":33,"id":"f7eadc","input":"dic_char={chr(i):i for i in range(32,55) }\ndic_char","kernel":"python3","output":{"0":{"data":{"text/plain":"{' ': 32,\n '!': 33,\n '\"': 34,\n '#': 35,\n '$': 36,\n '%': 37,\n '&': 38,\n \"'\": 39,\n '(': 40,\n ')': 41,\n '*': 42,\n '+': 43,\n ',': 44,\n '-': 45,\n '.': 46,\n '/': 47,\n '0': 48,\n '1': 49,\n '2': 50,\n '3': 51,\n '4': 52,\n '5': 53,\n '6': 54}"},"exec_count":33}},"pos":29,"start":1553881210292,"state":"done","type":"cell"}
{"cell_type":"code","end":1553881213619,"exec_count":34,"id":"167742","input":"dic_char['6']","kernel":"python3","output":{"0":{"data":{"text/plain":"54"},"exec_count":34}},"pos":30,"start":1553881213598,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":15,"id":"d1fe79","input":"a = {1, 2, 3, 4}\n1 in a\n","output":{"0":{"data":{"text/plain":"True"},"exec_count":15,"output_type":"execute_result"}},"pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":16,"id":"b542de","input":"5 in a","output":{"0":{"data":{"text/plain":"False"},"exec_count":16,"output_type":"execute_result"}},"pos":15,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":21,"id":"c57d93","input":"dic_char['2']","output":{"0":{"data":{"text/plain":"50"},"exec_count":21,"output_type":"execute_result"}},"pos":32,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"21bdc4","input":"a = {1, 2, 3, 4}\nb = {3, 4, 5, 6}\nprint (\"a - b:\", a.difference(b))\nprint (\"b - a:\",b.difference(a))","output":{"0":{"name":"stdout","output_type":"stream","text":"a - b: {1, 2}\nb - a: {5, 6}\n"}},"pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"839c8a","input":"set([1, 2, 3, 4,1])","output":{"0":{"data":{"text/plain":"{1, 2, 3, 4}"},"exec_count":9,"output_type":"execute_result"}},"pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"107f30","input":"- Existem várias operações disponíveis nos conjuntos através de métodos, como as operações mais conhecidas de teoria.\n\n**1. União**","pos":4,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"153edc","input":"- Podemos usar ***List Comprehensions***  para montar um dicionário que relaciona os inteiros de zero a dez e seus respectivos quadrados","pos":27,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"4488d0","input":"**2. Interseção**\n- Essa operação é muito útil quando precisamos descobrir elementos que duas listas possuem em comum:","pos":7,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"547a2f","input":"**3. Diferença**\n- A diferença entre dois conjuntos A e B retorna somente os elementos de A que não estão em B, ou seja, retira de A todos os elementos comuns a ambos os conjuntos:","pos":9,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"68935c","input":"## Exercício\n- Crie um dicionário com produtos e seus preços.\n- Ache o produto mais barato. \n- Determine o intervalo de variação do preço. \n- Crie um dicionário com produtos e suas marcas. \n- Para cada marca determine o intervalo de variação de preço. ","pos":40,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"76f0d6","input":"## Exercício:\n- Crie um dicionário com  nomes de pessoas e cidades de origem (no mínimo 10). \n- Determine quantas cidades diferentes aparecem nesse levantamento.\n-  Agrupe as pessoas de acordo com uma origem comum. ","pos":39,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"863d81","input":"Para acessar um valor podemos usar a chave: ","pos":31,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"89a126","input":"**5. Pertinência**\n- Além das operações tradicionais de união, interseção e diferença, também temos operações de verificação de pertinência. A seguir veremos algumas.\n- Para verificar se um determinado elemento pertence a um conjunto, podemos usar o já conhecido operador de pertinência *in*:","pos":13,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"8d8db8","input":"# Bases de programação em Python (Parte 2)","pos":0,"slide":"slide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"bd5a0e","input":"Podemos varrer  os dicionários  por chaves e por values. ","pos":33,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"cbc6b4","input":"- Este dicionário pode receber valores futuramente durante a execução do programa.\n- Agora, imaginemos como seria montar um dicionário que relacionasse strings para os dias da semana, como 'seg' e 'ter' com números. Indispensável se você for fazer um calendário, não acha?","pos":21,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"d16892","input":"Vamos inicialmente criar um dicionário contendo um caractere e seu código  ASCII. ","pos":28,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e6bd21","input":"Nesse exemplo os dias da semana são chamados de _keys_ e os números de _values_.   ","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e6bf87","input":"## Exercícios \n\n- Crie um  conjunto contendo os times participantes do campeonato paulista. \n- Crie uma conjunto de times brasileiros na libertadores.\n- Determine quais times estão nas duas competições.\n- Quais estão em apenas uma delas?\n- Quais estão em pelo menos uma delas?\n\n(Escreva o código python para resolver o problema e não simplesmente a resposta.)","pos":15.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e8c8a6","input":"**4. Diferença simétrica**\n- Diferença simétrica é uma operação sobre os dois conjuntos, que retorna todos os elementos (de ambos os conjuntos a e b) que pertencem a somente um dos conjuntos.","pos":11,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"e930fa","input":"dict ()\n- permite transformar listas de tuplas em dicionários.","pos":24,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"ed6d0f","input":"## Sets\n- Sets (ou, como iremos chamar daqui para a frente, conjuntos) são estruturas disponíveis como builtins do Python, utilizadas para representar coleções desordenadas de elementos únicos. \n- Os elementos não são armazenados em uma ordem específica e confiável;\n- Conjuntos não contém elementos repetidos;\n- A característica número 1 é importante, porque o desenvolvedor jamais deve confiar na ordenação de um conjunto, visto que a ordem em que os elementos são mantidos nos conjuntos varia de implementação para implementação do interpretador Python. ","pos":1,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"eea25f","input":"## Estrutura de dados - Dicionários\n\n- Os dicionários em Python são estruturas de dados que contém pares de chave-valor.\n\n![estruturadedados](estdados.png)\n\n- São parecidos com as listas, mas o acesso a cada posição da lista é feito de forma diferente.\n- Para começar, vamos ver as maneiras de definir um dicionário. Sendo assim, inicialmente iremos definir um dicionário vazio:\n","pos":16,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"fa0eb2","input":"Vamos  gerar um exemplo mais complexo. ","pos":36,"state":"done","type":"cell"}
{"end":1553879290287,"exec_count":3,"id":"6833d5","input":"s[0]","kernel":"python3","output":{"0":{"ename":"TypeError","evalue":"'set' object does not support indexing","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-c9c96910e542>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0ms\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'set' object does not support indexing"]}},"pos":2.5,"start":1553879289793,"state":"done","type":"cell"}
{"end":1553879386116,"exec_count":8,"id":"95e8ec","input":"l1=[1,2,3]\ntype(l1)","kernel":"python3","output":{"0":{"data":{"text/plain":"list"},"exec_count":8}},"pos":6.5,"start":1553879386095,"state":"done","type":"cell"}
{"end":1553879410344,"exec_count":9,"id":"d86b48","input":"teste=set(l1)\ntype(teste)","kernel":"python3","output":{"0":{"data":{"text/plain":"set"},"exec_count":9}},"pos":6.75,"start":1553879410332,"state":"done","type":"cell"}
{"end":1553879508318,"exec_count":14,"id":"05662a","input":"l1={1,2,3}\nl2={2,5,6}\nl1.intersection(l2)","kernel":"python3","output":{"0":{"data":{"text/plain":"{2}"},"exec_count":14}},"pos":8.5,"start":1553879508311,"state":"done","type":"cell"}
{"end":1553880055507,"exec_count":21,"id":"21a2e4","input":"dias_semana['dom']","kernel":"python3","output":{"0":{"data":{"text/plain":"0"},"exec_count":21}},"pos":22.5,"start":1553880055489,"state":"done","type":"cell"}
{"end":1553880682016,"exec_count":25,"id":"f4842b","input":"dic_char.keys()","kernel":"python3","output":{"0":{"data":{"text/plain":"dict_keys([' ', '!', '\"', '#', '$', '%', '&', \"'\", '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6'])"},"exec_count":25}},"pos":33.5,"start":1553880681995,"state":"done","type":"cell"}
{"id":"2139cb","input":"","pos":41,"state":"done","type":"cell"}
{"id":0,"time":1555072898294,"type":"user"}
{"last_load":1553870624717,"type":"file"}