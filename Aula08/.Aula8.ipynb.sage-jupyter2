{"backend_state":"running","kernel":"anaconda3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":88625152},"metadata":{"celltoolbar":"Slideshow","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1555073084691,"exec_count":2,"id":"53da13","input":"with open('texto.txt', 'r') as f:\n    print(f.read())","kernel":"python3","output":{"0":{"name":"stdout","text":"Mas o que quer dizer este poema? - perguntou-me alarmada a boa senhora.\nE o que quer dizer uma nuvem? - respondi triunfante.\nUma nuvem - disse ela - umas vezes quer dizer chuva, outras vezes bom tempo...\n\nMario Quintana\n"}},"pos":21,"start":1555073084663,"state":"done","type":"cell"}
{"cell_type":"code","end":1555073143956,"exec_count":7,"id":"0f687d","input":"!more matriznum2.csv","kernel":"python3","output":{"0":{"name":"stdout","text":"18576 182383 18383 18383\r\n18383 183838 18338 19933\r\n17273 173773 18283 18283\r\n"}},"pos":6,"start":1555073143824,"state":"done","type":"cell"}
{"cell_type":"code","end":1555073146303,"exec_count":8,"id":"6e1f53","input":"with open('matriznum.csv', 'r') as f:\n    print(f.read())","kernel":"python3","output":{"0":{"name":"stdout","text":"18576 182383 18383 18383\n18383 183838 18338 19933\n17273 173773 18283 18283\n"}},"pos":20,"start":1555073146284,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089136374,"exec_count":15,"id":"5fa921","input":"%%writefile texto.txt\nMas o que quer dizer este poema? - perguntou-me alarmada a boa senhora.\nE o que quer dizer uma nuvem? - respondi triunfante.\nUma nuvem - disse ela - umas vezes quer dizer chuva, outras vezes bom tempo...\n\nMario Quintana","kernel":"python3","output":{"0":{"name":"stdout","text":"Writing texto.txt\n"}},"pos":3,"start":1555089136362,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089251635,"exec_count":16,"id":"31ff84","input":"%%writefile matriznum.csv\n18576 182383 18383 18383\n18383 183838 18338 19933\n17273 173773 18283 18283","kernel":"python3","output":{"0":{"name":"stdout","text":"Writing matriznum.csv\n"}},"pos":5,"start":1555089251624,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089403647,"exec_count":17,"id":"9c4eed","input":"f = open(\"test.dat\", \"w\")\nf.write(\"Ola mundo!\\n\")\nf.write(\"Adeus mundo...\\n\")\nf.close()","kernel":"python3","pos":14,"start":1555089403634,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089407174,"exec_count":18,"id":"3dc6fa","input":"!more test.dat\n","kernel":"python3","output":{"0":{"name":"stdout","text":"Ola mundo!\r\nAdeus mundo...\r\n"}},"pos":15,"start":1555089407028,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089437967,"exec_count":19,"id":"e41c10","input":"f = open(\"test.dat\", \"r\")\ntxt = f.read()\ntxt\n","kernel":"python3","output":{"0":{"data":{"text/plain":"'Ola mundo!\\nAdeus mundo...\\n'"},"exec_count":19}},"pos":16,"start":1555089437956,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089530641,"exec_count":20,"id":"252c59","input":"f=open(\"test.dat\",\"a\")\ntxt=f.write(\"Mais uma linha\")\nf.close()","kernel":"python3","pos":17,"start":1555089530629,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089534160,"exec_count":21,"id":"c81155","input":"!more test.dat","kernel":"python3","output":{"0":{"name":"stdout","text":"Ola mundo!\r\nAdeus mundo...\r\nMais uma linha\r\n"}},"pos":18,"start":1555089533952,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089753254,"exec_count":22,"id":"660531","input":"!ls","kernel":"python3","output":{"0":{"name":"stdout","text":"Aula8.ipynb  matriznum.csv  test.dat  texto.txt\r\n"}},"pos":24,"start":1555089753068,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089789085,"exec_count":24,"id":"a2ac51","input":"with open(\"matriznum.csv\",\"r\") as f:\n    lines=f.readlines()","kernel":"python3","pos":25,"start":1555089789078,"state":"done","type":"cell"}
{"cell_type":"code","end":1555089796738,"exec_count":25,"id":"2791b6","input":"for line in lines:\n    print(line.split())","kernel":"python3","output":{"0":{"name":"stdout","text":"['18576', '182383', '18383', '18383']\n['18383', '183838', '18338', '19933']\n['17273', '173773', '18283', '18283']\n"}},"pos":26,"start":1555089796721,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090185639,"exec_count":28,"id":"00f13d","input":"import pandas as pd","kernel":"python3","pos":32,"start":1555090184733,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090196743,"exec_count":29,"id":"2fb95b","input":"obj = pd.Series([4, 7, -5, 3])","kernel":"python3","pos":33,"start":1555090196732,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090252839,"exec_count":30,"id":"9763e9","input":"obj.values","kernel":"python3","output":{"0":{"data":{"text/plain":"array([ 4,  7, -5,  3])"},"exec_count":30}},"pos":36,"start":1555090252821,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090255538,"exec_count":31,"id":"d31b3d","input":"obj.index","kernel":"python3","output":{"0":{"data":{"text/plain":"RangeIndex(start=0, stop=4, step=1)"},"exec_count":31}},"pos":37,"start":1555090255527,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090291248,"exec_count":33,"id":"cfa73f","input":"obj2","kernel":"python3","output":{"0":{"data":{"text/plain":"d      4\nbbb    7\na     -5\nc      3\ndtype: int64"},"exec_count":33}},"pos":40,"start":1555090291227,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090355943,"exec_count":35,"id":"4494ce","input":"obj2['a'] # acessando pela chave usando a notação de dicionários","kernel":"python3","output":{"0":{"data":{"text/plain":"-5"},"exec_count":35}},"pos":42,"start":1555090355923,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090367223,"exec_count":36,"id":"ee6d74","input":"obj2.a # acessando pela chave usando a notação de objetos de uma classe","kernel":"python3","output":{"0":{"data":{"text/plain":"-5"},"exec_count":36}},"pos":43,"start":1555090367212,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090372679,"exec_count":37,"id":"315d28","input":"obj.iloc[2] # acessando pela posição","kernel":"python3","output":{"0":{"data":{"text/plain":"-5"},"exec_count":37}},"pos":44,"start":1555090372653,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090538188,"exec_count":41,"id":"28c110","input":"obj2 = pd.Series([4, 7, -5,4, 3], index=['d', 'bbb', 'a', 'ffff','c c'])","kernel":"python3","pos":39,"start":1555090538181,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090586972,"exec_count":44,"id":"31ec26","input":"obj2 * 2","kernel":"python3","output":{"0":{"data":{"text/plain":"d        8\nbbb     14\na      -10\nffff     8\nc c      6\ndtype: int64"},"exec_count":44}},"pos":46,"start":1555090586924,"state":"done","type":"cell"}
{"cell_type":"code","end":1555090703473,"exec_count":48,"id":"67d255","input":"obj2[obj2>0] # seleciona os positivos`","kernel":"python3","output":{"0":{"data":{"text/plain":"d       4\nbbb     7\nffff    4\nc c     3\ndtype: int64"},"exec_count":48}},"pos":47,"start":1555090703438,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":61,"id":"9d449a","input":"obj","output":{"0":{"data":{"text/plain":"0    4\n1    7\n2   -5\n3    3\ndtype: int64"},"exec_count":61,"output_type":"execute_result"}},"pos":34,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"05fe89","input":"### Manipulação de dados com \"Pandas\"\n\n- Pandas nos permite carregar o dados muito facilmente, explorar as variáveis, e fazer gráficos com matplotlib.\n- Este pacote fornece estruturas de dados e funções ricas projetadas para tornar o trabalho dados estruturados rápidos, fáceis e expressivos. E, como você verá, um dos ingredientes críticos permitindo que o Python seja um ambiente de análise de dados poderoso e produtivo.","pos":29,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"0b31b1","input":"- A função ***open()*** retorna um objeto da classe file, que permite fazer a leitura e escrita em arquivos das mais diversas formas. Na sua forma padrão, o arquivo é aberto somente para leitura.","pos":10,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"0f86e5","input":"- A representação de sequência de caracteres de uma série exibida interativamente mostra o índice à esquerda e os valores à direita. Como não especificamos um índice para os dados, é criado um padrão consistindo nos inteiros 0 a N-1 (onde N é o comprimento dos dados). Você pode obter a representação de matriz eo objeto de índice da Série por meio de seus valores e atributos de índice, respectivamente:","pos":35,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2cdb11","input":"- Existem pelo menos 3 maneiras de acessar os elementos de uma série:","pos":41,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3313a8","input":"### Arquivos\n\n- Arquivo é um conjunto de dados.\n- Identificados por um caminho (absoluto/relativo)\n- Ao contrário de valores de variáveis, os arquivos são persistentes\n- Para o sistema operacional um arquivo é  uma sequência de bytes\n- Suportes físicos: discos magnéticos, memórias flash, CD-Rs e etc.","pos":1,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"33478f","input":"**3. arquivos de texto vs. binários**\n\n- arquivos de texto: contêm apenas caracteres imprimíveis e espaços, tabulação, etc.\n- arquivos binários: imagens JPEG, audio MP3, programas, etc.\n- Por omissão: open assume que o arquivos é de texto\n- Em linux/unix: não há diferença essencial entre os arquivos de texto e binários; ambos podem ser processados – abertos, lidos, escritos. . . – da mesma forma.","pos":22,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"400e81","input":"## Forma Alternativa\n","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"543991","input":"## Pandas","pos":28,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"644033","input":"**2. Métodos sobre arquivos**\n\n- **f.write(str)**: escrever uma cadeia;\n- **f.read()**: lê todo o conteudo (uma “string”);\n- **f.read(n)**: lê apenas n caracteres;\n- **f.readline()**: lê uma linha de texto;\n- **f.close()**: terminar leitura/escrita no arquivo;","pos":9,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"6ab93c","input":"### Exercícios\n\n1. Crie 12 arquivos, chamados de 'arq_mes_estação.txt'. Cada um deles contendo a frase: \"A minha estação predileta é 'estação', especialmente 'mês'\"  repetida um número aleatório de vezes, entre 5 e 20. \n2. Comprima essas arquivos usando o comando gzip. ","pos":27,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"76b612","input":"**1. Introdução a estrutura de dados**\n- Para começar com pandas, você precisará se sentir confortável com suas estruturas de dados: `Series` e `DataFrame`. Embora não sejam uma solução universal para problema, eles fornecem uma base sólida e fácil de usar para a maioria das aplicações.","pos":30,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"854865","input":"- A seguir podemos ver um exemplo de escrita e leitura de um arquivo:","pos":13,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"8e69cf","input":"**1.  Métodos sobre arquivos**\n- Inicialmente, como já foi ensinado em aulas anteriores, vamos criar um arquivo de texto que será utilizado nos próximos exemplos.","pos":2,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"8f7556","input":"- Ao abrirmos o arquivo de matriznum, encontramos:","pos":5.5,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"9709d3","input":"**4. Diretórios**\n- Quando você cria um novo arquivo abrindo-o e escrevendo nele, o novo arquivo fica no diretório corrente (seja lá onde for que você esteja quando rodar o programa). Do mesmo modo, quando você abre um arquivo para leitura, Python procura por ele no diretório corrente.\n\n- Se você quiser abrir um arquivo que esteja em algum outro lugar, você tem que especificar o caminho (path) para o arquivo, o qual é o nome do diretório (ou folder) onde o arquivo está localizado:\n\n```python\nf = open(\"Documments/pasta/arquivo\", \"r\")\nprint f.readline()\n```","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"979813","input":"- Podemos definir o modo como esse arquivo pode ser aberto: Em **’r’**  temos somente leitura (arquivo deve já existir). No modo **’w’** escrita (se o arquivo já existir: remove o conteúdo) e **’a’** escrita (se o arquivo já existir: acrescenta ao final).\n- Veja o exemplo a seguir:","pos":12,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"a8f959","input":"**Exercícios:**\n\n1. Construa um objeto Series com o nome de alguns times e o número de mundiais conquistados. \n2. Selecione os que possuem mais de 1 mundial\n3. Construa uma objeto Series com os valores em reais do preço de 10 produtos. Gere um novo objeto com os \nvalores acima de R$ 10,00 e com valores em dólares.\n","pos":48,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"af1363","input":"- Muitas vezes, será desejável criar uma Série com um índice identificando cada ponto de dados:","pos":38,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"b3ab7e","input":"### Operações com `Series`","pos":45,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b91a82","input":"#  Manipulação de Arquivos e  Pandas","pos":0,"slide":"slide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"cef6c9","input":"4. Descubra para que serve o comando where https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.where.html#pandas.Series.where\n5. Crie um objeto Series com base na lista de preços cujos elementos sejam 1 se o preço for maior do que R$10,00\ne zero nos demais casos. ","pos":49,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"dc317c","input":"- Também é possível manipular arquivos em modo csv. Veja o exemplo abaixo de uma matriz de dados numéricos.","pos":4,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"e41f4b","input":"**1.1 `Series`**\n- A Series é um objeto de tipo matriz unidimensional contendo uma matriz de dados  e uma matriz associada de rótulos de dados, chamado seu índice. A série mais simples é formada apenas a partir de uma matriz de dados.","pos":31,"state":"done","type":"cell"}
{"end":1555089810300,"exec_count":26,"id":"193ff1","input":"lines","kernel":"python3","output":{"0":{"data":{"text/plain":"['18576 182383 18383 18383\\n',\n '18383 183838 18338 19933\\n',\n '17273 173773 18283 18283']"},"exec_count":26}},"pos":25.5,"start":1555089810287,"state":"done","type":"cell"}
{"end":1555090565908,"exec_count":43,"id":"4e833a","input":"obj2['c c']","kernel":"python3","output":{"0":{"data":{"text/plain":"3"},"exec_count":43}},"pos":44.5,"start":1555090565892,"state":"done","type":"cell"}
{"end":1555090607193,"exec_count":45,"id":"bdf412","input":"l=[1,2]\n2*l","kernel":"python3","output":{"0":{"data":{"text/plain":"[1, 2, 1, 2]"},"exec_count":45}},"pos":46.5,"start":1555090607185,"state":"done","type":"cell"}
{"end":1555090635796,"exec_count":46,"id":"f3b01d","input":"obj2","kernel":"python3","output":{"0":{"data":{"text/plain":"d       4\nbbb     7\na      -5\nffff    4\nc c     3\ndtype: int64"},"exec_count":46}},"pos":46.25,"start":1555090635788,"state":"done","type":"cell"}
{"end":1555090657213,"exec_count":47,"id":"7cf6e8","input":"obj2>0","kernel":"python3","output":{"0":{"data":{"text/plain":"d        True\nbbb      True\na       False\nffff     True\nc c      True\ndtype: bool"},"exec_count":47}},"pos":46.75,"start":1555090657204,"state":"done","type":"cell"}
{"id":"6e4cb9","input":"","pos":0.5,"state":"done","type":"cell"}
{"id":"bf5b13","input":"","pos":50,"state":"done","type":"cell"}
{"id":0,"time":1560527539410,"type":"user"}
{"last_load":1555073033205,"type":"file"}