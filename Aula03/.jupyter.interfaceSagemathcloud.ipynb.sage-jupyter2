{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":79065088},"metadata":{"celltoolbar":"Slideshow","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.4.3+"},"widgets":{"state":{"f9ca3e95d380446f9b3e6dca140cb390":{"views":[{"cell_index":52}]}},"version":"1.2.0"}},"trust":true,"type":"settings"}
{"cell_type":"code","collapsed":true,"exec_count":21,"id":"e95822","input":"from IPython.display import HTML, SVG, YouTubeVideo","pos":36,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","collapsed":true,"exec_count":23,"id":"ba4930","input":"from collections import OrderedDict\nfrom IPython.display import display, clear_output\nfrom ipywidgets import Dropdown\n#from IPython.html.widgets import DropdownWidget # IPython < 4.x","pos":40,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","collapsed":true,"id":"654477","input":"!ls *.ipynb","pos":25,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","collapsed":true,"id":"8679a1","input":"%lsmagic","pos":27,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","collapsed":true,"id":"a24d99","input":"from __future__ import print_function\nfrom IPython.core import page\npage.page = print","pos":32,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","collapsed":true,"id":"b0cfc5","input":"%run?","pos":33,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","end":1551964029693,"exec_count":4,"id":"a1eced","input":"1+1","kernel":"python3","output":{"0":{"data":{"text/plain":"2"},"exec_count":4}},"pos":5,"slide":"subslide","start":1551964029683,"state":"done","type":"cell"}
{"cell_type":"code","end":1551964434639,"exec_count":5,"id":"567591","input":"a=1\nb=3\nc=a-b\n\nprint (c)","kernel":"python3","output":{"0":{"name":"stdout","text":"-2\n"}},"pos":13,"slide":"subslide","start":1551964434625,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":12,"id":"96e006","input":"a=1\nb=7\nprint (a)\nprint (b)","output":{"0":{"name":"stdout","output_type":"stream","text":"1\n7\n"}},"pos":15,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":15,"id":"3faf43","input":"aux=7\nb=1\na=aux\nprint (a)\nprint (b)","output":{"0":{"name":"stdout","output_type":"stream","text":"7\n1\n"}},"pos":16,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":18,"id":"656d57","input":"%%writefile test.txt\nHello world!","output":{"0":{"name":"stdout","output_type":"stream","text":"Writing test.txt\n"}},"pos":29,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":19,"id":"14d54d","input":"# Vamos verificar o conteúdo deste arquivo\nwith open('test.txt', 'r') as f:\n    print(f.read())","output":{"0":{"name":"stdout","output_type":"stream","text":"Hello world!\n"}},"pos":30,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":22,"id":"3a0fe5","input":"HTML('''\n<table style=\"border: 2px solid black;\">\n''' + \n''.join(['<tr>' + \n         ''.join(['<td>{row},{col}</td>'.format(\n            row=row, col=col\n            ) for col in range(5)]) +\n         '</tr>' for row in range(5)]) +\n'''\n</table>\n''')","output":{"0":{"data":{"text/html":"\n<table style=\"border: 2px solid black;\">\n<tr><td>0,0</td><td>0,1</td><td>0,2</td><td>0,3</td><td>0,4</td></tr><tr><td>1,0</td><td>1,1</td><td>1,2</td><td>1,3</td><td>1,4</td></tr><tr><td>2,0</td><td>2,1</td><td>2,2</td><td>2,3</td><td>2,4</td></tr><tr><td>3,0</td><td>3,1</td><td>3,2</td><td>3,3</td><td>3,4</td></tr><tr><td>4,0</td><td>4,1</td><td>4,2</td><td>4,3</td><td>4,4</td></tr>\n</table>\n"},"exec_count":22,"output_type":"execute_result"}},"pos":38,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":24,"id":"7c6241","input":"# We create a Dropdown widget, with a dictionary containing\n# the keys (video name) and the values (Youtube identifier) \n# of every menu item.\ndw = Dropdown(options=OrderedDict([\n# dw = DropdownWidget(values=OrderedDict([ # IPython < 4.x\n                        ('SciPy 2012', 'iwVvqwLDsJo'), \n                        ('PyCon 2012', '2G5YTlheCbw'),\n                        ('SciPy 2013', 'j9YpkSX7NNM')]))\n# We create a callback function that displays the requested\n# Youtube video.\ndef on_value_change(name, val):\n    clear_output()\n    display(YouTubeVideo(val))\n# Every time the user selects an item, the function\n# `on_value_change` is called, and the `val` argument\n# contains the value of the selected item.the function\n# `on_value_change` is called, and the `val` argument\n# contains the value of the selected item.\ndw.on_trait_change(on_value_change, 'value')\n# We choose a default value.\ndw.value = dw.options['SciPy 2013']\n# dw.value = dw.values['SciPy 2013'] # IPyhon < 4.x\n# Finally, we display the widget.\ndisplay(dw)","output":{"0":{"data":{"text/html":"\n        <iframe\n            width=\"400\"\n            height=\"300\"\n            src=\"https://www.youtube.com/embed/j9YpkSX7NNM\"\n            frameborder=\"0\"\n            allowfullscreen\n        ></iframe>\n        "},"output_type":"display_data"}},"pos":41,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":3,"id":"3ec64c","input":"print (\"Hello world!\")","output":{"0":{"name":"stdout","output_type":"stream","text":"Hello world!\n"}},"pos":2,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"8d930c","input":"_*3","output":{"0":{"data":{"text/plain":"6"},"exec_count":6,"output_type":"execute_result"}},"pos":8,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"04765a","input":"Podemos inserir imagens também:\n\n![This is an image](http://ipython.org/_static/IPy_header.png)","pos":23,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"1629ef","input":"### Executando o modo de Mardown.\n- O texto pode ser adicionado aos notebooks Jupyter usando células Markdown. Markdown é uma linguagem de marcação popular que é um superconjunto de HTML. Sua especificação pode ser encontrada aqui:\n\nHttp://daringfireball.net/projects/markdown/","pos":17,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"1a9c4c","input":"- Agora, ilustramos os recursos interativos mais recentes no IPython 2.0+. Esta versão traz widgets gráficos no notebook que podem interagir com objetos Python. Vamos criar um menu drop-down que nos permite exibir um entre vários vídeos.","pos":39,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"3f5c5e","input":"- Na próxima célula, podemos recuperar o valor do último objeto retornado com a variável especial _ (sublinhado). ","pos":6,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"410bf8","input":"# Jupyter Notebook e Interface do CoCalc\n","pos":0,"slide":"slide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"42747d","input":"#### Bases de Markdown\n\n##### Dar ênfase ao texto\n\n- Você pode fazer o texto em *itálico* ou em **negrito**.\n![M1](m1.png)\n","pos":18,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"43830e","input":"- ** Exercício 4**. Crie um novo jupyter notebook em **new** e utilizando-se do modo Markdown escreva um título com nome: **Física Computacional 2017** e subtitulo escrito **Explorando o interface do SageMathCloud**. \n- **Exercício 5**. Ainda no mesmo notebook, porém em outro **kernel** escreva a equação abaixo em LaTeX: \n![eq. Latex](exc5.png)\n","pos":42,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"47c906","input":"- Como você pode ver na saída de **% lsmagic**, há muitos comandos mágicos em IPython. Você pode encontrar mais informações sobre qualquer comando adicionando? Sim. Por exemplo, aqui está como obter ajuda sobre o comando **% run magic**:","pos":31,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"691321","input":"#### Operações aritméticas básicas\n\n- (+) Soma\n- (-) Subtração\n- (*) Multiplicação\n- (/) Divisão","pos":4,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"6b6d8d","input":"##### Equações em LaTeX\n\n- Cortesia de MathJax, você pode incluir expressões matemáticas tanto inline: $ e^{i \\pi} + 1 = 0 $ quanto em ula linha separada:\n\n$$ e^x = \\sum_{i = 0}^ \\infty \\frac{1}{i!} x ^i $$\n\n\nou ainda:\n\n$$\\hat{f}(\\xi) = \\int_{-\\infty}^{+\\infty} f(x)\\, \\mathrm{e}^{-i \\xi x}$$\n\n\n** Mais informações:** http://www.cercifaf.org.pt/moodle/help.php?file=markdown.html","pos":21,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"6f7609","input":"### Executando o modo de comando (**code**).\n\n- Primeiro e acima de tudo, o Notebook Jupyter é um ambiente interativo para escrever e executar código. O notebook é capaz de executar código em uma ampla gama de idiomas. No entanto, cada notebook está associado a um único kernel. Este bloco de notas está associado ao kernel do IPython, portanto executa código Python.\n\n- As células de código permitem que você digite e execute o código. Execute uma célula de código usando **Shift-Enter**","pos":1,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"7a4c15","input":"IPython Cookbook, by Cyrille Rossant, Packt Publishing, 2014 (500 pages).","pos":44,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"7dc0cf","input":"#### Atribuição de objetos a variáveis nomeadas","pos":12,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"8025d4","input":"- A ênfase pode ser adicionada a palavras únicas, a uma sequência de palavras, ou mesmo às partes das palavras:\n\n![M2](m2.png)\n","pos":19,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"8a341f","input":"Existem dois outros atalhos de teclado para executar o código:\n  - **Shift-Enter** executa a célula atual e insere uma nova abaixo.\n  - **Ctrl-Enter** executa a célula atual e entra no modo de comando.","pos":3,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"9fcf7d","input":"Combinando células de código e células de Markdown, você pode criar um documento interativo autônomo que combina computações (código), texto e gráficos.\n\n**1. Isso era para as células do Markdown. O IPython também vem com um sofisticado sistema de exibição que permite inserir elementos ricos na web no notebook. Aqui, mostramos como adicionar HTML, SVG (Scalable Vector Graphics) e até mesmo vídeos do Youtube em um notebook.**\n\nPrimeiro, precisamos importar algumas classes.\nDentro [ ]:","pos":35,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"ac6a92","input":"- **Exemplo 1.** Leia duas variáveis reais a e b, troque seus conteúdos e Imprima os valores trocados.","pos":14,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"cc68b1","input":"- Nós cobrimos o básico do IPython no notebook. Vejamos agora a rica exibição de recursos interativos do notebook. Até agora, criamos apenas células de código, ou seja, células que contêm ... código. Existem outros tipos de células, notadamente células Markdown. Aqueles contêm texto rico formatado com Markdown, uma sintaxe de formatação de texto simples popular. Este formato suporta texto normal, cabeçalhos, negrito, itálico, links de hipertexto, imagens, equações matemáticas no LaTeX, código, elementos HTML e outros recursos, conforme mostrado abaixo.\n","pos":34,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"d5f3dd","input":"- O IPython vem com uma biblioteca de comandos mágicos. Esses comandos são atalhos convenientes para ações comuns. Todos eles começam com% (% de caracteres). Você pode obter a lista de todos os comandos mágicos com % lsmagic.","pos":26,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"d5f556","input":"- Criamos uma tabela HTML dinamicamente com o Python, e a exibimos no bloco de notas (baseado em HTML).","pos":37,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"d60b0b","input":"##### Título\n\n- Markdown permite subdividir o texto com títulos; estão disponíveis seis níveis diferentes, embora não seja comum que um texto normal use mais de três. Por exemplo, há três níveis de título usados no texto que está a ler actualmente.\n\n- Pode criar um título começando uma linha com um ou vários caracteres #. Usa-se um único caracter # para o título principal, e quantos mais caracteres # usar, menos importante será o título.\n\n![M3](m3.png)","pos":20,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"dec615","input":"### Código\n\nPodemos mostrar código também: \n```python\nprint(\"Hello world!\")\n```","pos":22,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"e3d7df","input":"#### Comandos Mágicos\n\n- O IPython não só aceita o código Python, mas também comandos shell. Esses são definidos pelo sistema operacional (Windows, Linux, Mac OS X, etc.). Nós primeiro tipo! Em uma célula antes de digitar o comando shell. Aqui, obtemos a lista de notebooks no diretório atual.","pos":24,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"e63099","input":"- A cécula mágica tem um prefixo ** %%**: eles se aplicam a uma célula inteira no caderno.\n- Por exemplo, a magia de célula **%% writefile** permite que você crie um arquivo de texto facilmente. Este comando mágico aceita um nome de arquivo como argumento. Todas as linhas restantes na célula são gravadas diretamente neste arquivo de texto. Aqui, criamos um arquivo **test.txt** e escrevemos: **Hello world!**.","pos":28,"slide":"subslide","state":"done","type":"cell"}
{"cell_type":"markdown","id":"e71966","input":"- **Exercício 6**. Faça o download de uma figura qualquer da internet e coloque dentro do diretório de respostas. Após isto,  incluia esta imagem no mesmo notebook dos exercícios a cima. (Dica: Procure como incluir figuras em no modo Markdown no help do jupyter notebook ou na internet).\n- **Exercício 7**.  Utilizando o comando **writefile** crie um arquivo de texto com a frase: **Física Computacional 2017 + número de RA** e salve no diretório de respostas, utilizando-se do mesmo notebook usado nos outros exercícios. Salve este notebook com a data de hoje no diretório de respostas.","pos":43,"slide":"subslide","state":"done","type":"cell"}
{"id":"5a2ef3","input":"myresult = 2 + 2","pos":10,"type":"cell"}
{"id":"c7d09e","input":"","pos":7,"type":"cell"}
{"id":"ddd197","input":"Na prática, pode ser mais conveniente atribuir objetos a variáveis nomeadas, como em ","pos":9,"type":"cell"}
{"id":0,"time":1551973276505,"type":"user"}
{"last_load":1551459112704,"type":"file"}