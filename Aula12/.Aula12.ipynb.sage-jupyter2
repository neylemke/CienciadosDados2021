{"backend_state":"ready","kernel":"anaconda3","kernel_usage":{"cpu":26.693227094010517,"memory":52703232},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","collapsed":true,"exec_count":0,"id":"1a1810","input":"","pos":37,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"85f462","input":"","pos":24,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d50332","input":"chardet.detect(rawdata)","pos":40,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":1,"id":"c29414","input":"import numpy as np\nimport matplotlib.pyplot as plt\n\nX = np.linspace(-np.pi, np.pi, 256, endpoint=True)\nC,S = np.cos(X), np.sin(X)\n\nplt.plot(X,C)\nplt.plot(X,S)\n\nplt.show()","output":{"0":{"data":{"image/png":"3597d286ed0f7180533a25627c9e4f6baadb9146","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":1,"metadata":{"image/png":{"height":250,"width":388}},"output_type":"execute_result"}},"pos":3,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":10,"id":"aa0a02","input":"def read_auto_data(fileName = \"Automobile price data.csv\"):\n    'Function to load the auto price data set from a .csv file' \n    import pandas as pd\n    import numpy as np\n\n    ## Read the .csv file with the pandas read_csv method\n    auto_prices = pd.read_csv(fileName)\n    \n    ## Remove rows with missing values, accounting for mising values coded as '?'\n    cols = ['price', 'bore', 'stroke', \n          'horsepower', 'peak-rpm']\n    for column in cols:\n        auto_prices.loc[auto_prices[column] == '?', column] = np.nan\n    auto_prices.dropna(axis = 0, inplace = True)\n\n    ## Convert some columns to numeric values\n    for column in cols:\n        auto_prices[column] = pd.to_numeric(auto_prices[column])\n#    auto_prices[cols] = auto_prices[cols].as_type(int64)\n        \n    return auto_prices\nauto_prices = read_auto_data()\n","pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":11,"id":"59b130","input":"auto_prices.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>symboling</th>\n      <th>normalized-losses</th>\n      <th>make</th>\n      <th>fuel-type</th>\n      <th>aspiration</th>\n      <th>num-of-doors</th>\n      <th>body-style</th>\n      <th>drive-wheels</th>\n      <th>engine-location</th>\n      <th>wheel-base</th>\n      <th>...</th>\n      <th>engine-size</th>\n      <th>fuel-system</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>peak-rpm</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>convertible</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>88.6</td>\n      <td>...</td>\n      <td>130</td>\n      <td>mpfi</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111</td>\n      <td>5000</td>\n      <td>21</td>\n      <td>27</td>\n      <td>13495</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>convertible</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>88.6</td>\n      <td>...</td>\n      <td>130</td>\n      <td>mpfi</td>\n      <td>3.47</td>\n      <td>2.68</td>\n      <td>9.0</td>\n      <td>111</td>\n      <td>5000</td>\n      <td>21</td>\n      <td>27</td>\n      <td>16500</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>?</td>\n      <td>alfa-romero</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>two</td>\n      <td>hatchback</td>\n      <td>rwd</td>\n      <td>front</td>\n      <td>94.5</td>\n      <td>...</td>\n      <td>152</td>\n      <td>mpfi</td>\n      <td>2.68</td>\n      <td>3.47</td>\n      <td>9.0</td>\n      <td>154</td>\n      <td>5000</td>\n      <td>19</td>\n      <td>26</td>\n      <td>16500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>164</td>\n      <td>audi</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>four</td>\n      <td>sedan</td>\n      <td>fwd</td>\n      <td>front</td>\n      <td>99.8</td>\n      <td>...</td>\n      <td>109</td>\n      <td>mpfi</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>10.0</td>\n      <td>102</td>\n      <td>5500</td>\n      <td>24</td>\n      <td>30</td>\n      <td>13950</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>164</td>\n      <td>audi</td>\n      <td>gas</td>\n      <td>std</td>\n      <td>four</td>\n      <td>sedan</td>\n      <td>4wd</td>\n      <td>front</td>\n      <td>99.4</td>\n      <td>...</td>\n      <td>136</td>\n      <td>mpfi</td>\n      <td>3.19</td>\n      <td>3.40</td>\n      <td>8.0</td>\n      <td>115</td>\n      <td>5500</td>\n      <td>18</td>\n      <td>22</td>\n      <td>17450</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>","text/plain":"   symboling normalized-losses         make fuel-type aspiration num-of-doors  \\\n0          3                 ?  alfa-romero       gas        std          two   \n1          3                 ?  alfa-romero       gas        std          two   \n2          1                 ?  alfa-romero       gas        std          two   \n3          2               164         audi       gas        std         four   \n4          2               164         audi       gas        std         four   \n\n    body-style drive-wheels engine-location  wheel-base  ...    engine-size  \\\n0  convertible          rwd           front        88.6  ...            130   \n1  convertible          rwd           front        88.6  ...            130   \n2    hatchback          rwd           front        94.5  ...            152   \n3        sedan          fwd           front        99.8  ...            109   \n4        sedan          4wd           front        99.4  ...            136   \n\n   fuel-system  bore  stroke compression-ratio horsepower  peak-rpm city-mpg  \\\n0         mpfi  3.47    2.68               9.0        111      5000       21   \n1         mpfi  3.47    2.68               9.0        111      5000       21   \n2         mpfi  2.68    3.47               9.0        154      5000       19   \n3         mpfi  3.19    3.40              10.0        102      5500       24   \n4         mpfi  3.19    3.40               8.0        115      5500       18   \n\n   highway-mpg  price  \n0           27  13495  \n1           27  16500  \n2           26  16500  \n3           30  13950  \n4           22  17450  \n\n[5 rows x 26 columns]"},"exec_count":11,"output_type":"execute_result"}},"pos":11,"scrolled":true,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":12,"id":"902a6d","input":"%matplotlib inline \nauto_prices.plot(kind = 'scatter', x = 'city-mpg', y = 'price')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7f98f9e80d68>"},"exec_count":12,"output_type":"execute_result"},"1":{"data":{"image/png":"c2e6e987d259b8e11bf2e0376b5bc49e50ec0cc0","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":12,"metadata":{"image/png":{"height":261,"width":396}},"output_type":"execute_result"}},"pos":17,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":13,"id":"777698","input":"import matplotlib.pyplot as plt\nfig = plt.figure(figsize=(10, 10)) # define plot area\nax = fig.gca() # define axis                   \nauto_prices.plot(kind = 'scatter', x = 'city-mpg', y = 'price', ax = ax)\nax.set_title('Scatter plot de preço vs consumo') # Give the plot a main title\nax.set_xlabel('Consumo') # Set text for the x axis\nax.set_ylabel('Preço')# Set text for y axis","output":{"0":{"data":{"text/plain":"Text(0,0.5,'Preço')"},"exec_count":13,"output_type":"execute_result"},"1":{"data":{"image/png":"e1309ca04184ebb05ca34ec967bf48f85a225ae5","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":13,"metadata":{"image/png":{"height":598,"width":620}},"output_type":"execute_result"}},"pos":20,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":13,"id":"dbbc42","input":"import chardet\nfile=open(\"pokemonclean2.csv\",\"r\")\nrawdata=file.readlines()\n\n","pos":39,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":15,"id":"d31fe9","input":"import pandas as pd\nx = list(range(100))\ny = [z * z for z in range(100)]\ndf = pd.DataFrame({'x':x, 'y':y})","pos":23,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":16,"id":"0e4949","input":"fig = plt.figure(figsize=(10, 10)) # define área do plot \nax = fig.gca() # define eixo               \ndf.plot(x = 'x', y = 'y', ax = ax) ## linha é o formato padrão\nax.set_title('Line plot de $x^2$ vs. $x$') # Título Principal\nax.set_xlabel('$x$') # Eixo x\nax.set_ylabel('$x^2$')# Eixo y","output":{"0":{"data":{"text/plain":"Text(0,0.5,'$x^2$')"},"exec_count":16,"output_type":"execute_result"},"1":{"data":{"image/png":"739d7c6c7c82f80e86b338e0b440677b9621047d","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":16,"metadata":{"image/png":{"height":600,"width":621}},"output_type":"execute_result"}},"pos":26,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":17,"id":"831634","input":"counts = auto_prices['make'].value_counts() # encontre a contagem para cada categoria\ncounts","output":{"0":{"data":{"text/plain":"toyota           32\nnissan           18\nmitsubishi       13\nhonda            13\nmazda            13\nvolkswagen       12\nsubaru           12\npeugot           11\nvolvo            11\ndodge             9\nbmw               8\nmercedes-benz     8\nplymouth          7\naudi              6\nsaab              6\nporsche           4\nalfa-romero       3\njaguar            3\nchevrolet         3\nisuzu             2\nmercury           1\nName: make, dtype: int64"},"exec_count":17,"output_type":"execute_result"}},"pos":28,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":18,"id":"bc75c8","input":"fig = plt.figure(figsize=(10,10)) # define plot area\nax = fig.gca() # define axis    \ncounts.plot.bar(ax = ax) # Use the plot.bar method on the counts data frame\nax.set_title('Modelos por Montadora') # Give the plot a main title\nax.set_xlabel('Montadora') # Set text for the x axis\nax.set_ylabel('Modelos')# Set text for y axis","output":{"0":{"data":{"text/plain":"Text(0,0.5,'Modelos')"},"exec_count":18,"output_type":"execute_result"},"1":{"data":{"image/png":"c10977f839b6620225beee334d27726b675ed41f","text/plain":"<Figure size 720x720 with 1 Axes>"},"exec_count":18,"metadata":{"image/png":{"height":652,"width":604}},"output_type":"execute_result"}},"pos":30,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":24,"id":"b2bbf9","input":"import pandas as pd","pos":35,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":37,"id":"0b916c","input":"lispoktab","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>S�rie</th>\n      <th>Gera��o</th>\n      <th>Temporada</th>\n      <th>Epis�dios</th>\n      <th>Regi�o</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>S�rie Original (O In�cio/Ouro e Prata)</td>\n      <td>Primeira (O In�cio)</td>\n      <td>Liga �ndigo</td>\n      <td>001-083</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>S�rie Original (O In�cio/Ouro e Prata)</td>\n      <td>NaN</td>\n      <td>Aventuras nas Ilhas Laranja</td>\n      <td>084-118</td>\n      <td>Ilhas Laranja</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>S�rie Original (O In�cio/Ouro e Prata)</td>\n      <td>Segunda (Ouro e Prata)</td>\n      <td>Liga Johto</td>\n      <td>119-159</td>\n      <td>Johto</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>S�rie Original (O In�cio/Ouro e Prata)</td>\n      <td>NaN</td>\n      <td>Campe�es da Liga Johto</td>\n      <td>160-211</td>\n      <td>Johto</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>S�rie Original (O In�cio/Ouro e Prata)</td>\n      <td>NaN</td>\n      <td>Master Quest</td>\n      <td>212-276</td>\n      <td>Johto</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Rubi e Safira</td>\n      <td>Terceira</td>\n      <td>Pok�mon: Avan�ado</td>\n      <td>277-316</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Rubi e Safira</td>\n      <td>NaN</td>\n      <td>Desafio Avan�ado</td>\n      <td>317-368</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Rubi e Safira</td>\n      <td>NaN</td>\n      <td>Batalha Avan�ada</td>\n      <td>369-422</td>\n      <td>Hoenn</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Rubi e Safira</td>\n      <td>NaN</td>\n      <td>Batalha da Fronteira</td>\n      <td>423-469</td>\n      <td>Kanto</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Diamante e P�rola</td>\n      <td>Quarta</td>\n      <td>Diamante e P�rola</td>\n      <td>470-521</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Diamante e P�rola</td>\n      <td>NaN</td>\n      <td>Batalha Dimensional</td>\n      <td>522-573</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Diamante e P�rola</td>\n      <td>NaN</td>\n      <td>Batalhas Gal�cticas</td>\n      <td>574-626</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Diamante e P�rola</td>\n      <td>NaN</td>\n      <td>Vencedores da Liga Sinnoh</td>\n      <td>627-660</td>\n      <td>Sinnoh</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Preto e Branco</td>\n      <td>Quinta</td>\n      <td>Preto e Branco</td>\n      <td>661-708</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Preto e Branco</td>\n      <td>NaN</td>\n      <td>Destinos Rivais</td>\n      <td>709-757</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Preto e Branco</td>\n      <td>NaN</td>\n      <td>Aventuras em Unova(e Mais Al�m)</td>\n      <td>758-804</td>\n      <td>Unova</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>XY</td>\n      <td>Sexta</td>\n      <td>A S�rie XY</td>\n      <td>805-853</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>XY</td>\n      <td>NaN</td>\n      <td>Desafio em Kalos</td>\n      <td>854-898</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>XY</td>\n      <td>NaN</td>\n      <td>A S�rie: XY &amp; Z</td>\n      <td>899-951</td>\n      <td>Kalos</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Sol e Lua</td>\n      <td>S�tima</td>\n      <td>Sol e Lua</td>\n      <td>952-994</td>\n      <td>Alola</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Sol e Lua</td>\n      <td>NaN</td>\n      <td>Ultra Aventuras</td>\n      <td>995-1037</td>\n      <td>Kalos</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                                     S�rie                 Gera��o  \\\n0   S�rie Original (O In�cio/Ouro e Prata)     Primeira (O In�cio)   \n1   S�rie Original (O In�cio/Ouro e Prata)                     NaN   \n2   S�rie Original (O In�cio/Ouro e Prata)  Segunda (Ouro e Prata)   \n3   S�rie Original (O In�cio/Ouro e Prata)                     NaN   \n4   S�rie Original (O In�cio/Ouro e Prata)                     NaN   \n5                            Rubi e Safira                Terceira   \n6                            Rubi e Safira                     NaN   \n7                            Rubi e Safira                     NaN   \n8                            Rubi e Safira                     NaN   \n9                        Diamante e P�rola                  Quarta   \n10                       Diamante e P�rola                     NaN   \n11                       Diamante e P�rola                     NaN   \n12                       Diamante e P�rola                     NaN   \n13                          Preto e Branco                  Quinta   \n14                          Preto e Branco                     NaN   \n15                          Preto e Branco                     NaN   \n16                                      XY                   Sexta   \n17                                      XY                     NaN   \n18                                      XY                     NaN   \n19                               Sol e Lua                  S�tima   \n20                               Sol e Lua                     NaN   \n\n                          Temporada Epis�dios         Regi�o  \n0                       Liga �ndigo   001-083          Kanto  \n1       Aventuras nas Ilhas Laranja   084-118  Ilhas Laranja  \n2                        Liga Johto   119-159          Johto  \n3            Campe�es da Liga Johto   160-211          Johto  \n4                      Master Quest   212-276          Johto  \n5                 Pok�mon: Avan�ado   277-316          Hoenn  \n6                  Desafio Avan�ado   317-368          Hoenn  \n7                  Batalha Avan�ada   369-422          Hoenn  \n8              Batalha da Fronteira   423-469          Kanto  \n9                 Diamante e P�rola   470-521         Sinnoh  \n10              Batalha Dimensional   522-573         Sinnoh  \n11              Batalhas Gal�cticas   574-626         Sinnoh  \n12        Vencedores da Liga Sinnoh   627-660         Sinnoh  \n13                   Preto e Branco   661-708          Unova  \n14                  Destinos Rivais   709-757          Unova  \n15  Aventuras em Unova(e Mais Al�m)   758-804          Unova  \n16                       A S�rie XY   805-853          Kalos  \n17                 Desafio em Kalos   854-898          Kalos  \n18                  A S�rie: XY & Z   899-951          Kalos  \n19                        Sol e Lua   952-994          Alola  \n20                  Ultra Aventuras  995-1037          Kalos  "},"exec_count":37,"output_type":"execute_result"}},"pos":38,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":39,"id":"fcec84","input":"lispoktab=pd.read_csv(\"pokemonclean3.csv\")","pos":36,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":5,"id":"a582fe","input":"auto_prices.describe()","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>symboling</th>\n      <th>wheel-base</th>\n      <th>length</th>\n      <th>width</th>\n      <th>height</th>\n      <th>curb-weight</th>\n      <th>engine-size</th>\n      <th>bore</th>\n      <th>stroke</th>\n      <th>compression-ratio</th>\n      <th>horsepower</th>\n      <th>peak-rpm</th>\n      <th>city-mpg</th>\n      <th>highway-mpg</th>\n      <th>price</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n      <td>195.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.794872</td>\n      <td>98.896410</td>\n      <td>174.256923</td>\n      <td>65.886154</td>\n      <td>53.861538</td>\n      <td>2559.000000</td>\n      <td>127.938462</td>\n      <td>3.329385</td>\n      <td>3.250308</td>\n      <td>10.194974</td>\n      <td>103.271795</td>\n      <td>5099.487179</td>\n      <td>25.374359</td>\n      <td>30.841026</td>\n      <td>13248.015385</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.230612</td>\n      <td>6.132038</td>\n      <td>12.476443</td>\n      <td>2.132484</td>\n      <td>2.396778</td>\n      <td>524.715799</td>\n      <td>41.433916</td>\n      <td>0.271866</td>\n      <td>0.314115</td>\n      <td>4.062109</td>\n      <td>37.869730</td>\n      <td>468.271381</td>\n      <td>6.401382</td>\n      <td>6.829315</td>\n      <td>8056.330093</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-2.000000</td>\n      <td>86.600000</td>\n      <td>141.100000</td>\n      <td>60.300000</td>\n      <td>47.800000</td>\n      <td>1488.000000</td>\n      <td>61.000000</td>\n      <td>2.540000</td>\n      <td>2.070000</td>\n      <td>7.000000</td>\n      <td>48.000000</td>\n      <td>4150.000000</td>\n      <td>13.000000</td>\n      <td>16.000000</td>\n      <td>5118.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>94.500000</td>\n      <td>166.300000</td>\n      <td>64.050000</td>\n      <td>52.000000</td>\n      <td>2145.000000</td>\n      <td>98.000000</td>\n      <td>3.150000</td>\n      <td>3.110000</td>\n      <td>8.500000</td>\n      <td>70.000000</td>\n      <td>4800.000000</td>\n      <td>19.500000</td>\n      <td>25.000000</td>\n      <td>7756.500000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.000000</td>\n      <td>97.000000</td>\n      <td>173.200000</td>\n      <td>65.400000</td>\n      <td>54.100000</td>\n      <td>2414.000000</td>\n      <td>120.000000</td>\n      <td>3.310000</td>\n      <td>3.290000</td>\n      <td>9.000000</td>\n      <td>95.000000</td>\n      <td>5100.000000</td>\n      <td>25.000000</td>\n      <td>30.000000</td>\n      <td>10245.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2.000000</td>\n      <td>102.400000</td>\n      <td>184.050000</td>\n      <td>66.900000</td>\n      <td>55.650000</td>\n      <td>2943.500000</td>\n      <td>145.500000</td>\n      <td>3.590000</td>\n      <td>3.410000</td>\n      <td>9.400000</td>\n      <td>116.000000</td>\n      <td>5500.000000</td>\n      <td>30.000000</td>\n      <td>35.000000</td>\n      <td>16509.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.000000</td>\n      <td>120.900000</td>\n      <td>208.100000</td>\n      <td>72.000000</td>\n      <td>59.800000</td>\n      <td>4066.000000</td>\n      <td>326.000000</td>\n      <td>3.940000</td>\n      <td>4.170000</td>\n      <td>23.000000</td>\n      <td>262.000000</td>\n      <td>6600.000000</td>\n      <td>49.000000</td>\n      <td>54.000000</td>\n      <td>45400.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"exec_count":5,"output_type":"execute_result"}},"pos":13,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":6,"id":"7a8d0a","input":"plt.figure(figsize=(10,6), dpi=80)\nplt.plot(X, C, color=\"blue\", linewidth=2.5, linestyle=\"-\", label=\"cosseno\")\nplt.plot(X, S, color=\"red\",  linewidth=2.5, linestyle=\"-\", label=\"seno\")\nplt.legend(loc='upper left', frameon=True)\nplt.show()","output":{"0":{"data":{"image/png":"b43014f68e12cf5fe5ebb4590c1833e261893662","text/plain":"<Figure size 800x480 with 1 Axes>"},"exec_count":6,"metadata":{"image/png":{"height":399,"width":679}},"output_type":"execute_result"}},"pos":5,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":7,"id":"7737f6","input":"SMALL_SIZE = 8\nMEDIUM_SIZE = 10\nBIGGER_SIZE = 18\nplt.rc('font', size=SMALL_SIZE)          # controls default text sizes\nplt.rc('axes', titlesize=SMALL_SIZE)     # fontsize of the axes title\nplt.rc('axes', labelsize=MEDIUM_SIZE)    # fontsize of the x and y labels\nplt.rc('xtick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\nplt.rc('ytick', labelsize=SMALL_SIZE)    # fontsize of the tick labels\nplt.rc('legend', fontsize=BIGGER_SIZE)    # legend fontsize\nplt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title\n","pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":9,"id":"719b82","input":"plt.figure(figsize=(10,6), dpi=80)\nplt.plot(X, C, color=\"blue\", linewidth=2.5, linestyle=\"-\", label=\"cosseno\")\nplt.plot(X, S, color=\"red\",  linewidth=2.5, linestyle=\"-\", label=\"seno\")\nplt.legend(loc='upper left', frameon=False)\nplt.title(\"O ano da peste de 2019\")\n\nplt.show()","output":{"0":{"data":{"image/png":"bd1f941fb33a77e11a22ee5694e268f0db2a76ee","text/plain":"<Figure size 800x480 with 1 Axes>"},"exec_count":9,"metadata":{"image/png":{"height":408,"width":672}},"output_type":"execute_result"}},"pos":8,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0e76ae","input":"- O gráfico de barra mostra claramente quais fabricantes de automóveis têm o maior número de modelos. As marcas mais especializadas têm relativamente menos modelos.","pos":31,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"19e73d","input":"**Exemplo 1**","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1a23d6","input":"- Na trama acima, podemos ver que os carros mais caros têm a menor eficiência de combustível, enquanto carros relativamente baratos também são mais econômicos para a unidade.","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2005f8","input":"- Agora aplique a receita anterior para plotar x vs y e gerar um gráfico em linha.","pos":25,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"211b5a","input":"**1. Introdução**\n- Matplotlib é provavelmente o pacote Python mais utilizado para gráficos 2D. Ele fornece uma maneira muito rápida de visualizar dados de Python e números de qualidade de publicação em vários formatos. \n- O Matplotlib vem com um conjunto de configurações padrão que permitem personalizar todos os tipos de propriedades. Você pode controlar os padrões de quase todas as propriedades em matplotlib: tamanho de figura e dpi, largura de linha, cor e estilo, eixos, propriedades de eixo e grade, texto e propriedades de fonte e assim por diante. Enquanto os padrões de matplotlib são bastante bons na maioria dos casos, você pode querer modificar algumas propriedades para casos específicos.","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2c17b8","input":"- Você pode ver a lista ordenada de contagens descrita acima. Observe que esse quadro de dados é muito menor do que o original, uma vez que só precisa de uma linha para cada valor exclusivo da marca.\n- Agora, faça o gráfico de barras usando o quadro de dados de contagens, crie o gráfico de barras do número de carros por marca. Observe que a receita para este gráfico é a mesma que usamos para gráficos de dispersão e gráficos de linha, usando apenas o método .plot.bar.","pos":29,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"3466df","input":"**2.1- Tipos de gráficos básicos**\n- Agora que nós carregamos e tivemos um primeiro olhar para os dados, vamos começar a trabalhar fazendo alguns gráficos.\n- Existem tipos de gráfico enumeráveis que são usados para a exploração de dados.","pos":14,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"43eec9","input":"# Visualização de dados em Python com Matplotlib ","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4dd4d0","input":"**b) Gráfico em Linha**\n- Os gráficos de linhas são semelhantes aos gráficos de pontos. Em traçados de linha os pontos discretos são conectados por linhas.\n- Primeiro, vamos criar um dataframe, com uma relação simples entre x e y.","pos":22,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"52d587","input":"** a) Gráficos de dispersão**\n- Os gráficos de dispersão mostram a relação entre duas variáveis sob a forma de pontos no gráfico. Em termos simples, os valores ao longo de um eixo horizontal são plotados contra um eixo vertical.\n- O pacote Pandas contém um número de métodos de plotagem úteis que operam em dataframes. A receita simples para traçar a partir de um dataframe Pandas \n- Use o método de plotagem, especificando o argumento de tipo ou use um método de plotagem gráfico-específico.\n- Especifique as colunas com os valores para os eixos x e y.","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"536127","input":"### Exercício 3\n- Faça um gráfico de Barras com os dados contidos no DataFrame do exercício dos epsódios do Pokemon. Represente o número de episódios para cada Temporada. Neste exercicio o gráfico deve conter legenda, titulo, nome dos eixos e cada barra deve conter uma cor diferente.","pos":34,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"69ac3c","input":"**Alterando as cores e as larguras de linha, legenda:**\n- Primeiro passo, queremos ter o cosseno em azul eo seno em vermelho e uma linha ligeiramente mais grossa para ambos. Também alteraremos ligeiramente o tamanho da figura para torná-lo mais horizontal.\n- Vamos adicionar uma legenda no canto superior esquerdo. Isso só requer a adição do rótulo de argumento de palavra-chave (que será usado na caixa de legenda) para os comandos de plotagem.","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"73f1f9","input":"Para ajustar os tamanhos das fontes","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"806ca9","input":"**- Especifique uma figura, incluindo um tamanho.**\n\n**- Defina um ou mais eixos dentro da figura.**\n\n**- Use o método de escolha de panda. Certifique-se de especificar o eixo que você está usando.**\n\n**Use métodos nos eixos para controlar atributos como títulos e rótulos de eixo.**","pos":19,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8f433f","input":"### Exercício 2\n###### Agora que você já viu como criar alguns plots  simples, é sua vez de realizar uma visualização. Crie o seguinte gráfico de dispersão:\n\n- Traçar o tamanho do motor contra o preço.\n- Defina o tamanho da figura como 8 x 8.\n- Forneça um título significativo, rótulo do eixo x e rótulo do eixo y.","pos":33,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"90b92a","input":"- Você pode ver que há tipos de variáveis ​​numéricas e de string (categóricas). \n- Como uma próxima etapa examine algumas estatísticas de resumo das colunas numéricas usando o método Pandas descrever.\n- Note que as unidades de medida são americanas e não métricas.","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"9ec7bc","input":"**2. Carregar e examinar o conjunto de dados**\n- Vamos começar. A função mostrada na célula abaixo carrega os dados do arquivo .csv. Uma limpeza mínima é realizada nos dados. As linhas com valores em falta são eliminadas e algumas colunas são convertidas a partir de cadeias contendo números para dados numéricos utilizando-se do Pandas.","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"ac2653","input":"**c) Gráfico de Barras**\n- Gráficos de barras são usados para exibir as contagens de valores exclusivos de uma variável categórica. A altura da barra representa a contagem para cada categoria única da variável.\n- É improvável que o quadro de dados do pandas inclua contagens por categoria de uma variável. Assim, o primeiro passo para fazer um gráfico de barras é calcular as contagens. Felizmente, pandas tem um método ***value_counts***. O código abaixo usa esse método para criar um novo quadro de dados contendo as contagens por marca do carro.","pos":27,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b05391","input":"### Exercício1\n- A “classificação” de uma palavra é a sua posição em uma lista de palavras classificadas por frequência: a palavra mais comum tem a classificação 1, a segunda mais comum é 2 etc.\n- A lei de Zipf descreve a relação entre classificações e frequências das palavras em linguagens naturais (http://en.wikipedia.org/wiki/Zipf’s_law). Ela prevê especificamente que a frequência, $f$, da palavra com classificação $ r $ é:\n\n  $$ f = cr−s $$ \n- onde s e c são parâmetros que dependem do idioma e do texto. Se você tomar o logaritmo de ambos os lados desta equação, obtemos:\n\n  $$\\log f = \\log c − s\\log r$$\n  \n- Se você traçar o log de f contra o log de r, terá uma linha reta com uma elevação -s e interceptar o log de c.\n\n\n**- Escreva um programa que leia um texto em um arquivo, conte as frequências das palavras e exiba uma linha para cada palavra, em ordem descendente da frequência, com log de f e log de r. Use o programa gráfico de sua escolha para traçar os resultados e verifique se formam uma linha reta. Você pode estimar o valor de s?**","pos":32,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b10e8e","input":"Nesta disciplina focaremos nos seguintes tipos de gráficos:\na) Gráfico de dispersão\nb) Gráficos em Linha\nc) Gráficos em Barras\nd) Histogramas\ne) BoxPlot\nf) BoxPlot usando  Densidade do Kernel\ng) ViolinPlot","pos":15,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"da4618","input":"- Nossa receita básica funcionou, mas não nos dá muito controle sobre o resultado.\n- Aproveitamos o fato de que os métodos Pandas plot são construídos em matplotlib. Assim, podemos especificar uma figura e um ou mais eixos dentro dessa figura. Podemos controlar muitos atributos do plot  uma vez especificados os eixos. Nossa receita melhorada se parece com isto:","pos":18,"state":"done","type":"cell"}
{"last_load":1560775431965,"type":"file"}